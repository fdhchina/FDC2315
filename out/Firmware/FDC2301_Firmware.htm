<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\..\out\Firmware\FDC2301_Firmware.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\..\out\Firmware\FDC2301_Firmware.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Tue Dec 29 10:13:21 2015
<BR><P>
<H3>Maximum Stack Usage =       5216 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
keydo_JobSongSet &rArr; GetAudioLength &rArr; mp3_ReadFromFile &rArr; mp3_ReadFromFSFile &rArr; ID3v2_ReadFromFile &rArr; ReadHeader &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[132]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[20]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1f]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[46]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[49]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[14]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">EXTI15_10_IRQHandler</a> from stm32f10x_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[15]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[16]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[17]">EXTI3_IRQHandler</a> from stm32f10x_it.o(i.EXTI3_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[18]">EXTI4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">EXTI9_5_IRQHandler</a> from stm32f10x_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[12]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[94]">InitBjSet</a> from menu.o(i.InitBjSet) referenced from menu.o(.constdata)
 <LI><a href="#[80]">InitGroupList</a> from menu.o(i.InitGroupList) referenced from menu.o(.constdata)
 <LI><a href="#[83]">InitIntercutTask</a> from menu.o(i.InitIntercutTask) referenced from menu.o(.constdata)
 <LI><a href="#[7d]">InitJobEdit</a> from menu.o(i.InitJobEdit) referenced from menu.o(.constdata)
 <LI><a href="#[97]">InitJobSongSet</a> from menu.o(i.InitJobSongSet) referenced from menu.o(.constdata)
 <LI><a href="#[9a]">InitJobTunerSet</a> from menu.o(i.InitJobTunerSet) referenced from menu.o(.constdata)
 <LI><a href="#[6c]">InitMainMenu</a> from menu.o(i.InitMainMenu) referenced from menu.o(.constdata)
 <LI><a href="#[89]">InitPhoneTask</a> from menu.o(i.InitPhoneTask) referenced from menu.o(.constdata)
 <LI><a href="#[5e]">InitPlayAUX</a> from menu.o(i.InitPlayAUX) referenced from menu.o(.constdata)
 <LI><a href="#[5b]">InitPlayMem</a> from menu.o(i.InitPlayMem) referenced from menu.o(.constdata)
 <LI><a href="#[61]">InitPlayUSB</a> from menu.o(i.InitPlayUSB) referenced from menu.o(.constdata)
 <LI><a href="#[58]">InitPlayeTuner</a> from menu.o(i.InitPlayeTuner) referenced from menu.o(.constdata)
 <LI><a href="#[a6]">InitPortCtrlParam</a> from menu.o(i.InitPortCtrlParam) referenced from menu.o(.constdata)
 <LI><a href="#[a3]">InitPortEditParam</a> from menu.o(i.InitPortEditParam) referenced from menu.o(.constdata)
 <LI><a href="#[72]">InitSongViewMenu</a> from menu.o(i.InitSongViewMenu) referenced from menu.o(.constdata)
 <LI><a href="#[9d]">InitSpecialJobEdit</a> from menu.o(i.InitSpecialJobEdit) referenced from menu.o(.constdata)
 <LI><a href="#[75]">InitSystemSet</a> from menu.o(i.InitSystemSet) referenced from menu.o(.constdata)
 <LI><a href="#[6f]">InitTaskMannagerMenu</a> from menu.o(i.InitTaskMannagerMenu) referenced from menu.o(.constdata)
 <LI><a href="#[7a]">InitTaskView</a> from menu.o(i.InitTaskView) referenced from menu.o(.constdata)
 <LI><a href="#[a0]">InitTaskViewList</a> from menu.o(i.InitTaskViewList) referenced from menu.o(.constdata)
 <LI><a href="#[86]">InitYkTask</a> from menu.o(i.InitYkTask) referenced from menu.o(.constdata)
 <LI><a href="#[7]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[f]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[13]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[11]">RTC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">SDIO_IRQHandler</a> from stm32f10x_it.o(i.SDIO_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4a]">SystemInit_ExtMemCtl</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[10]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">TIM3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">TIM4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">UART5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">USART1_IRQHandler</a> from stm32f10x_it.o(i.USART1_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">USART2_IRQHandler</a> from stm32f10x_it.o(i.USART2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">USART3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">USB_HP_CAN1_TX_IRQHandler</a> from stm32f10x_it.o(i.USB_HP_CAN1_TX_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">USB_LP_CAN1_RX0_IRQHandler</a> from stm32f10x_it.o(i.USB_LP_CAN1_RX0_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[e]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a8]">__main</a> from __main.o(!!!main) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[4e]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[4d]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[4c]">_sputc</a> from _sputc.o(.text) referenced 2 times from c89vsprintf.o(.text)
 <LI><a href="#[95]">dspBjSet</a> from menu.o(i.dspBjSet) referenced from menu.o(.constdata)
 <LI><a href="#[56]">dspDesktop</a> from menu.o(i.dspDesktop) referenced from menu.o(.constdata)
 <LI><a href="#[81]">dspGroupList</a> from menu.o(i.dspGroupList) referenced from menu.o(.constdata)
 <LI><a href="#[84]">dspIntercutTask</a> from menu.o(i.dspIntercutTask) referenced from menu.o(.constdata)
 <LI><a href="#[7e]">dspJobEdit</a> from menu.o(i.dspJobEdit) referenced from menu.o(.constdata)
 <LI><a href="#[98]">dspJobSongSet</a> from menu.o(i.dspJobSongSet) referenced from menu.o(.constdata)
 <LI><a href="#[9b]">dspJobTunerSet</a> from menu.o(i.dspJobTunerSet) referenced from menu.o(.constdata)
 <LI><a href="#[6d]">dspMainMenu</a> from menu.o(i.dspMainMenu) referenced from menu.o(.constdata)
 <LI><a href="#[6a]">dspPasswordInput</a> from menu.o(i.dspPasswordInput) referenced from menu.o(.constdata)
 <LI><a href="#[92]">dspPasswordSet</a> from menu.o(i.dspPasswordSet) referenced from menu.o(.constdata)
 <LI><a href="#[8a]">dspPhoneTask</a> from menu.o(i.dspPhoneTask) referenced from menu.o(.constdata)
 <LI><a href="#[5f]">dspPlayAUX</a> from menu.o(i.dspPlayAUX) referenced from menu.o(.constdata)
 <LI><a href="#[68]">dspPlayBj</a> from menu.o(i.dspPlayBj) referenced from menu.o(.constdata)
 <LI><a href="#[5c]">dspPlayMem</a> from menu.o(i.dspPlayMem) referenced from menu.o(.constdata)
 <LI><a href="#[64]">dspPlayPhone</a> from menu.o(i.dspPlayPhone) referenced from menu.o(.constdata)
 <LI><a href="#[59]">dspPlayTuner</a> from menu.o(i.dspPlayTuner) referenced from menu.o(.constdata)
 <LI><a href="#[62]">dspPlayUSB</a> from menu.o(i.dspPlayUSB) referenced from menu.o(.constdata)
 <LI><a href="#[66]">dspPlayYj</a> from menu.o(i.dspPlayYj) referenced from menu.o(.constdata)
 <LI><a href="#[a7]">dspPortCtrl</a> from menu.o(i.dspPortCtrl) referenced from menu.o(.constdata)
 <LI><a href="#[a4]">dspPortEdit</a> from menu.o(i.dspPortEdit) referenced from menu.o(.constdata)
 <LI><a href="#[8c]">dspSongViewMem</a> from menu.o(i.dspSongViewMem) referenced from menu.o(.constdata)
 <LI><a href="#[73]">dspSongViewMenu</a> from menu.o(i.dspSongViewMenu) referenced from menu.o(.constdata)
 <LI><a href="#[8e]">dspSongViewUSB</a> from menu.o(i.dspSongViewUSB) referenced from menu.o(.constdata)
 <LI><a href="#[9e]">dspSpecialJobEdit</a> from menu.o(i.dspSpecialJobEdit) referenced from menu.o(.constdata)
 <LI><a href="#[78]">dspSpecialMode</a> from menu.o(i.dspSpecialMode) referenced from menu.o(.constdata)
 <LI><a href="#[76]">dspSystemSet</a> from menu.o(i.dspSystemSet) referenced from menu.o(.constdata)
 <LI><a href="#[70]">dspTaskManagerMenu</a> from menu.o(i.dspTaskManagerMenu) referenced from menu.o(.constdata)
 <LI><a href="#[7b]">dspTaskView</a> from menu.o(i.dspTaskView) referenced from menu.o(.constdata)
 <LI><a href="#[a1]">dspTaskViewList</a> from menu.o(i.dspTaskViewList) referenced from menu.o(.constdata)
 <LI><a href="#[90]">dspTimeSet</a> from menu.o(i.dspTimeSet) referenced from menu.o(.constdata)
 <LI><a href="#[87]">dspYkTask</a> from menu.o(i.dspYkTask) referenced from menu.o(.constdata)
 <LI><a href="#[50]">itgCompareDate</a> from task.o(i.itgCompareDate) referenced from task.o(i.itgInit)
 <LI><a href="#[93]">keydo_BjSet</a> from menu.o(i.keydo_BjSet) referenced from menu.o(.constdata)
 <LI><a href="#[55]">keydo_Desktop</a> from menu.o(i.keydo_Desktop) referenced from menu.o(.constdata)
 <LI><a href="#[7f]">keydo_GroupList</a> from menu.o(i.keydo_GroupList) referenced from menu.o(.constdata)
 <LI><a href="#[82]">keydo_IntercutTask</a> from menu.o(i.keydo_IntercutTask) referenced from menu.o(.constdata)
 <LI><a href="#[7c]">keydo_JobEdit</a> from menu.o(i.keydo_JobEdit) referenced from menu.o(.constdata)
 <LI><a href="#[96]">keydo_JobSongSet</a> from menu.o(i.keydo_JobSongSet) referenced from menu.o(.constdata)
 <LI><a href="#[99]">keydo_JobTunerSet</a> from menu.o(i.keydo_JobTunerSet) referenced from menu.o(.constdata)
 <LI><a href="#[6b]">keydo_MainMenu</a> from menu.o(i.keydo_MainMenu) referenced from menu.o(.constdata)
 <LI><a href="#[69]">keydo_PasswordInput</a> from menu.o(i.keydo_PasswordInput) referenced from menu.o(.constdata)
 <LI><a href="#[91]">keydo_PasswordSet</a> from menu.o(i.keydo_PasswordSet) referenced from menu.o(.constdata)
 <LI><a href="#[88]">keydo_PhoneTask</a> from menu.o(i.keydo_PhoneTask) referenced from menu.o(.constdata)
 <LI><a href="#[5d]">keydo_PlayAUX</a> from menu.o(i.keydo_PlayAUX) referenced from menu.o(.constdata)
 <LI><a href="#[67]">keydo_PlayBj</a> from menu.o(i.keydo_PlayBj) referenced from menu.o(.constdata)
 <LI><a href="#[5a]">keydo_PlayMem</a> from menu.o(i.keydo_PlayMem) referenced from menu.o(.constdata)
 <LI><a href="#[63]">keydo_PlayPhone</a> from menu.o(i.keydo_PlayPhone) referenced from menu.o(.constdata)
 <LI><a href="#[57]">keydo_PlayTuner</a> from menu.o(i.keydo_PlayTuner) referenced from menu.o(.constdata)
 <LI><a href="#[60]">keydo_PlayUSB</a> from menu.o(i.keydo_PlayUSB) referenced from menu.o(.constdata)
 <LI><a href="#[65]">keydo_PlayYj</a> from menu.o(i.keydo_PlayYj) referenced from menu.o(.constdata)
 <LI><a href="#[a5]">keydo_PortCtrl</a> from menu.o(i.keydo_PortCtrl) referenced from menu.o(.constdata)
 <LI><a href="#[a2]">keydo_PortEdit</a> from menu.o(i.keydo_PortEdit) referenced from menu.o(.constdata)
 <LI><a href="#[8b]">keydo_SongViewMem</a> from menu.o(i.keydo_SongViewMem) referenced from menu.o(.constdata)
 <LI><a href="#[71]">keydo_SongViewMenu</a> from menu.o(i.keydo_SongViewMenu) referenced from menu.o(.constdata)
 <LI><a href="#[8d]">keydo_SongViewUSB</a> from menu.o(i.keydo_SongViewUSB) referenced from menu.o(.constdata)
 <LI><a href="#[9c]">keydo_SpecialJobEdit</a> from menu.o(i.keydo_SpecialJobEdit) referenced from menu.o(.constdata)
 <LI><a href="#[77]">keydo_SpecialMode</a> from menu.o(i.keydo_SpecialMode) referenced from menu.o(.constdata)
 <LI><a href="#[74]">keydo_SystemSet</a> from menu.o(i.keydo_SystemSet) referenced from menu.o(.constdata)
 <LI><a href="#[6e]">keydo_TaskManagerMenu</a> from menu.o(i.keydo_TaskManagerMenu) referenced from menu.o(.constdata)
 <LI><a href="#[79]">keydo_TaskView</a> from menu.o(i.keydo_TaskView) referenced from menu.o(.constdata)
 <LI><a href="#[9f]">keydo_TaskViewList</a> from menu.o(i.keydo_TaskViewList) referenced from menu.o(.constdata)
 <LI><a href="#[8f]">keydo_TimeSet</a> from menu.o(i.keydo_TimeSet) referenced from menu.o(.constdata)
 <LI><a href="#[85]">keydo_YkTask</a> from menu.o(i.keydo_YkTask) referenced from menu.o(.constdata)
 <LI><a href="#[51]">rtgCompareDate</a> from task.o(i.rtgCompareDate) referenced from task.o(i.rtgInit)
 <LI><a href="#[4f]">show_curSongName</a> from menu.o(i.show_curSongName) referenced from menu.o(i.DspSongName)
 <LI><a href="#[52]">tglCompareDate</a> from task.o(i.tglCompareDate) referenced from task.o(i.tglInit)
 <LI><a href="#[53]">tjgCompareStartTime</a> from task.o(i.tjgCompareStartTime) referenced from task.o(i.tjgInit)
 <LI><a href="#[54]">tjglCompare</a> from task.o(i.tjglCompare) referenced from task.o(i.tjglInit)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a8]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a9]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[ab]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[372]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[373]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[374]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[375]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[376]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[ac]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[117]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[ae]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[b0]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[b2]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[b3]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[377]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))

<P><STRONG><a name="[378]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[b4]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[b6]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[b7]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[b8]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[ba]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[bc]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[be]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[bf]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[c0]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[c2]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[379]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[c4]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[c6]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[c8]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[ca]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[37a]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[d6]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[37b]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[37c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[cc]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[37d]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[ce]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[37e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[37f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[d0]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[380]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[381]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[d1]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[382]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[383]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[384]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[385]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[386]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[387]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[388]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[389]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[38a]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[38b]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[38c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[38d]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[38e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[db]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[38f]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[390]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[391]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[392]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[393]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[394]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[aa]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[395]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[d3]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[d5]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[396]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[d7]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 2272 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; menu_OnTimer &rArr; AutoRemoteTaskDo &rArr; openRemoteTaskGroup &rArr; openRemoteTask &rArr; tuner_setBand &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[397]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[133]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[da]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[398]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[dc]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[327]"></a>rand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random
</UL>

<P><STRONG><a name="[4a]"></a>SystemInit_ExtMemCtl</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[132]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15c]"></a>CH375GetVer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, CH375MAI.O(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375LibInit
</UL>

<P><STRONG><a name="[fa]"></a>CH375s01</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s08
</UL>

<P><STRONG><a name="[de]"></a>CH375s17</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CH375s17 &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s42
</UL>

<P><STRONG><a name="[e1]"></a>CH375s18</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
</UL>

<P><STRONG><a name="[e4]"></a>CH375DirtyBuffer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, CH375MAI.O(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s08
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s42
</UL>

<P><STRONG><a name="[e3]"></a>CH375s42</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CH375s42 &rArr; CH375s17 &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DirtyBuffer
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s17
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s25
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s23
</UL>

<P><STRONG><a name="[e5]"></a>CH375s49</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CH375s49 &rArr; xDelay100uS
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xDelay100uS
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375Init
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskReady
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s25
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375Reset
</UL>

<P><STRONG><a name="[e7]"></a>CH375s40</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CH375s40 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskConnect
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s47
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s23
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s13
</UL>

<P><STRONG><a name="[e8]"></a>CH375DiskConnect</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CH375DiskConnect &rArr; CH375s40 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s40
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_DiskIsReady
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskReady
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s23
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s05
</UL>

<P><STRONG><a name="[e9]"></a>CH375s05</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CH375s05 &rArr; CH375DiskConnect &rArr; CH375s40 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskConnect
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileErase
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileClose
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileOpen
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s08
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s23
</UL>

<P><STRONG><a name="[ea]"></a>CH375Reset</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CH375Reset &rArr; CH375s49 &rArr; xDelay100uS
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s49
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375Init
</UL>

<P><STRONG><a name="[eb]"></a>CH375s43</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CH375s43 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375Init
</UL>

<P><STRONG><a name="[ec]"></a>CH375Init</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CH375Init &rArr; CH375s43 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s43
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375Reset
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s49
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375LibInit
</UL>

<P><STRONG><a name="[ed]"></a>CH375s13</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CH375s13 &rArr; CH375s40 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueryInterrupt
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xDelay100uS
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s40
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskReady
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s23
</UL>

<P><STRONG><a name="[ef]"></a>CH375s44</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CH375s44 &rArr; xQueryInterrupt &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueryInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskReady
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s25
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s47
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s23
</UL>

<P><STRONG><a name="[f0]"></a>CH375s41</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CH375s41 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s25
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s47
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s23
</UL>

<P><STRONG><a name="[f1]"></a>CH375s23</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CH375s23 &rArr; CH375s05 &rArr; CH375DiskConnect &rArr; CH375s40 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskConnect
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s41
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s44
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s13
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s05
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s40
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s42
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskReady
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s08
</UL>

<P><STRONG><a name="[f5]"></a>CH375s24</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
</UL>

<P><STRONG><a name="[f3]"></a>CH375s47</STRONG> (Thumb, 552 bytes, Stack size 8 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s41
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s44
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s40
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s45
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
</UL>

<P><STRONG><a name="[f4]"></a>CH375s06</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueryInterrupt
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s47
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s24
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s13
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DirtyBuffer
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s17
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s20
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileModify
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileErase
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s15
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileOpen
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s12
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s10
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s08
</UL>

<P><STRONG><a name="[f6]"></a>CH375s07</STRONG> (Thumb, 332 bytes, Stack size 8 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueryInterrupt
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xDelayAfterWrite
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s47
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s24
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s13
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DirtyBuffer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s18
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s20
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileModify
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileErase
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s15
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s12
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s09
</UL>

<P><STRONG><a name="[f8]"></a>CH375s25</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CH375s25 &rArr; CH375s42 &rArr; CH375s17 &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s41
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s44
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s49
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s42
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskReady
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s08
</UL>

<P><STRONG><a name="[f9]"></a>CH375s08</STRONG> (Thumb, 740 bytes, Stack size 24 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s25
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s23
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s05
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DirtyBuffer
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s01
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s02
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileOpen
</UL>

<P><STRONG><a name="[fc]"></a>CH375s09</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s20
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileErase
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s10
</UL>

<P><STRONG><a name="[fd]"></a>CH375s10</STRONG> (Thumb, 694 bytes, Stack size 32 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s09
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s19
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileErase
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileOpen
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s48
</UL>

<P><STRONG><a name="[fe]"></a>CH375s48</STRONG> (Thumb, 426 bytes, Stack size 8 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s10
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s20
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s11
</UL>

<P><STRONG><a name="[ff]"></a>CH375s11</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s48
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
</UL>

<P><STRONG><a name="[100]"></a>CH375s12</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileErase
</UL>

<P><STRONG><a name="[101]"></a>CH375FileOpen</STRONG> (Thumb, 1358 bytes, Stack size 48 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xFileNameEnumer
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s10
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s08
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s05
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileErase
</UL>

<P><STRONG><a name="[103]"></a>CH375s15</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileClose
</UL>

<P><STRONG><a name="[104]"></a>CH375FileClose</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s15
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s05
</UL>

<P><STRONG><a name="[105]"></a>CH375FileErase</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileOpen
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s12
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s10
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s09
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s05
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
</UL>

<P><STRONG><a name="[107]"></a>CH375s14</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s19
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileCreate
</UL>

<P><STRONG><a name="[106]"></a>CH375FileCreate</STRONG> (Thumb, 834 bytes, Stack size 64 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s14
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileErase
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileOpen
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s12
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s11
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s10
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s09
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s05
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DirtyBuffer
</UL>

<P><STRONG><a name="[108]"></a>CH375FileModify</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
</UL>

<P><STRONG><a name="[109]"></a>CH375DiskReady</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, CH375MAI.O(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CH375DiskReady &rArr; CH375s23 &rArr; CH375s05 &rArr; CH375DiskConnect &rArr; CH375s40 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskConnect
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s25
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s23
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s44
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s13
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s49
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_DiskIsReady
</UL>

<P><STRONG><a name="[10a]"></a>CH375s19</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s14
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s10
</UL>

<P><STRONG><a name="[10b]"></a>CH375s20</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s48
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s09
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
</UL>

<P><STRONG><a name="[10c]"></a>__c89vsprintf</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, c89vsprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
</UL>

<P><STRONG><a name="[10e]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoRemoteTaskDo
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_addDate
</UL>

<P><STRONG><a name="[110]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[111]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[10f]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[b5]"></a>_printf_int_dec</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[115]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[118]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[cd]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[198]"></a>strncat</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, strncat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncat
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_RollShowStr
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobSongSet
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
</UL>

<P><STRONG><a name="[18f]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongFile
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAudioLength
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v2_ReadFromFile
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v1_ReadFromFile
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadObject
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeaderIsValid
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindVBR
</UL>

<P><STRONG><a name="[170]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobSongSet
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialJobEdit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>

<P><STRONG><a name="[176]"></a>strrchr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, strrchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtractFileName
</UL>

<P><STRONG><a name="[16f]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongFile
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAudioLength
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtractFileName
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_RollShowStr
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_addDate
</UL>

<P><STRONG><a name="[2e4]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PasswordSet
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PasswordInput
</UL>

<P><STRONG><a name="[19a]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
</UL>

<P><STRONG><a name="[1b5]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgAssign
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_addDate
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v1_ReadFromFile
</UL>

<P><STRONG><a name="[119]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[399]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgInit
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemParam
</UL>

<P><STRONG><a name="[120]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[11d]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[11c]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[16d]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmInit
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_RollShowStr
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_addDate
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v2_ResetData
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ResetData
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ReadFromFSFile
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXingInfo
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFhGInfo
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindVBR
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindFrame
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FResetData
</UL>

<P><STRONG><a name="[39a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[39b]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[11f]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_FindSongIndex
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongno
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtractFileName
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_RollShowStr
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PasswordSet
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
</UL>

<P><STRONG><a name="[307]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[39c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[39d]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[39e]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[113]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[114]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[ad]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[10d]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>

<P><STRONG><a name="[4c]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> c89vsprintf.o(.text)
<LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[121]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[c5]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[c7]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[122]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[bd]"></a>_printf_longlong_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[125]"></a>_printf_longlong_oct</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[b9]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[c1]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[126]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[bb]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[c3]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[af]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[11a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[39f]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3a0]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3a1]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[3a2]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3a3]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>

<P><STRONG><a name="[124]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[3a4]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>_printf_fp_dec_real</STRONG> (Thumb, 616 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[130]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[c9]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[cb]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[123]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[d4]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[cf]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[12f]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[129]"></a>_btod_etento</STRONG> (Thumb, 212 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[d9]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[3a5]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[3a6]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[3a7]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[12a]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[135]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[134]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[136]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[137]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[12b]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[12c]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[138]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[139]"></a>Alarm_key</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, key.o(i.Alarm_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Alarm_key
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13b]"></a>AutoAmpRun</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, audio.o(i.AutoAmpRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AutoAmpRun
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13e]"></a>AutoRemoteTaskDo</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, menu.o(i.AutoRemoteTaskDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 2264 + Unknown Stack Size
<LI>Call Chain = AutoRemoteTaskDo &rArr; openRemoteTaskGroup &rArr; openRemoteTask &rArr; tuner_setBand &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTaskGroup
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_StopPlay
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAmpPower
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[329]"></a>BCD2HEX</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ds3231.o(i.BCD2HEX))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetDateTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetDate
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetTime
</UL>

<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15b]"></a>CH375LibInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ch375.o(i.CH375LibInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CH375LibInit &rArr; CH375Init &rArr; CH375s43 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375Init
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375GetVer
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Reset
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Init
</UL>

<P><STRONG><a name="[15d]"></a>CH375_Configuration</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ch375.o(i.CH375_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CH375_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Init
</UL>

<P><STRONG><a name="[1c8]"></a>CharIsNum</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, player.o(i.CharIsNum))
<BR><BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSongno
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongDir
</UL>

<P><STRONG><a name="[160]"></a>ChipHalInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hal.o(i.ChipHalInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ChipHalInit &rArr; Com_Init &rArr; USART2_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_InitGPIO
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[164]"></a>ChipOutHalInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hal.o(i.ChipOutHalInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ChipOutHalInit &rArr; lcm_Init &rArr; lcm_UpdateLCMData &rArr; Locatexy &rArr; LcdBusyR &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSi47XX_2w
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[143]"></a>CloseAmpPower</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, menu.o(i.CloseAmpPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CloseAmpPower &rArr; ttGetNextTask &rArr; tjgGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetNextTask
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeToSecond
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_AmpPowerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PasswordInput
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktop
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoRemoteTaskDo
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JobRunCounterDo
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[163]"></a>Com_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, com.o(i.Com_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Com_Init &rArr; USART2_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_NVIC_Configuration
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC1_Configuration
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipHalInit
</UL>

<P><STRONG><a name="[1eb]"></a>DateOfDays</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, task.o(i.DateOfDays))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DateOfDays
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyDateOfDays
</UL>

<P><STRONG><a name="[1ed]"></a>DayOfWeek</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, task.o(i.DayOfWeek))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DayOfWeek
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyDateOfWeek
</UL>

<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[157]"></a>DspSongName</STRONG> (Thumb, 212 bytes, Stack size 72 bytes, menu.o(i.DspSongName))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = DspSongName &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_queue
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_queue
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_UDiskInsert
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_StopPlay
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspUSBDiskStatus
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayMem
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayBj
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMemoryStatus
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayerDO
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[36]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI15_10_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f10x_it.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI9_5_IRQHandler &rArr; _keyscan &rArr; PollingKey &rArr; key_out_no
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_keyscan
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[173]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>

<P><STRONG><a name="[172]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>

<P><STRONG><a name="[331]"></a>EXTI_Init</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_Config
</UL>

<P><STRONG><a name="[175]"></a>ExtractFileName</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, player.o(i.ExtractFileName))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ExtractFileName &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strrchr
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
</UL>

<P><STRONG><a name="[177]"></a>FLASH_ErasePage</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[17a]"></a>FLASH_GetStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[222]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[179]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write_NoCheck
</UL>

<P><STRONG><a name="[220]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[178]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[17c]"></a>FResetData</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, mpegaudio.o(i.FResetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FResetData &rArr; ID3v2_ResetData &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v2_ResetData
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v1_ResetData
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFSFile
</UL>

<P><STRONG><a name="[17f]"></a>FindFrame</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, mpegaudio.o(i.FindFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = FindFrame &rArr; FindVBR &rArr; GetXingInfo &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsXing
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVBRDeviation
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFrameLength
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindVBR
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidFrameAt
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsFrameHeader
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecodeHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFSFile
</UL>

<P><STRONG><a name="[189]"></a>FindSongno</STRONG> (Thumb, 238 bytes, Stack size 160 bytes, player.o(i.FindSongno))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSongno
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongFile
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongDir
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitJobSongSet
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
</UL>

<P><STRONG><a name="[186]"></a>FindVBR</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, mpegaudio.o(i.FindVBR))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FindVBR &rArr; GetXingInfo &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetXingInfo
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFhGInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindFrame
</UL>

<P><STRONG><a name="[169]"></a>GPIO1_Configuration</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, com.o(i.GPIO1_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO1_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_Init
</UL>

<P><STRONG><a name="[330]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_Config
</UL>

<P><STRONG><a name="[15f]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Config
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_InitGPIO
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_Configer
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Configuration
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_Config
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_Init
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Configuration
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375_Configuration
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_set_out
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_set_in
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;si47xx_Configuration
</UL>

<P><STRONG><a name="[1d3]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputData))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCM_SET_DATA
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCM_GET_DATA
</UL>

<P><STRONG><a name="[13a]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alarm_key
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_in
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_IsInserted
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Byte
</UL>

<P><STRONG><a name="[13d]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoAmpRun
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_out_all
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlock
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand_NoDeassert
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_ioctl
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopCondition
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartCondition
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Byte
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_AuxPowerOpen
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setSource
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPortState
</UL>

<P><STRONG><a name="[13c]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoAmpRun
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_out_no
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_InitGPIO
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlock
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlock
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_Release
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_Config
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_Init
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_Init
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopCondition
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartCondition
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Byte
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_AuxPowerOpen
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setSource
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPortState
</UL>

<P><STRONG><a name="[1d5]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_Write))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCM_SET_DATA
</UL>

<P><STRONG><a name="[192]"></a>GetAudioLength</STRONG> (Thumb, 98 bytes, Stack size 640 bytes, player.o(i.GetAudioLength))
<BR><BR>[Stack]<UL><LI>Max Depth = 5184<LI>Call Chain = GetAudioLength &rArr; mp3_ReadFromFile &rArr; mp3_ReadFromFSFile &rArr; ID3v2_ReadFromFile &rArr; ReadHeader &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ReadFromFile
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_ReadFromFile
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFile
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobSongSet
</UL>

<P><STRONG><a name="[19e]"></a>GetBitRate</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mpegaudio.o(i.GetBitRate))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_GetDuration
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFrameLength
</UL>

<P><STRONG><a name="[19d]"></a>GetCoefficient</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, mpegaudio.o(i.GetCoefficient))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_GetDuration
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFrameLength
</UL>

<P><STRONG><a name="[246]"></a>GetDayCount</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, task.o(i.GetDayCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetDayCount
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TimeSet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TaskView
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DateIsValid
</UL>

<P><STRONG><a name="[196]"></a>GetDesktopSourceString</STRONG> (Thumb, 202 bytes, Stack size 96 bytes, menu.o(i.GetDesktopSourceString))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + Unknown Stack Size
<LI>Call Chain = GetDesktopSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongno
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getFreqString
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getBandName
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTunerFreq
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTunerBand
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetSourceType
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetSongID
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
</UL>

<P><STRONG><a name="[19c]"></a>GetDirectoryInfo</STRONG> (Thumb, 162 bytes, Stack size 88 bytes, player.o(i.GetDirectoryInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = GetDirectoryInfo &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSongno
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongFile
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongDir
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_UpdateSongDir
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewUSB
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewMem
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitJobSongSet
</UL>

<P><STRONG><a name="[191]"></a>GetFhGInfo</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, mpegaudio.o(i.GetFhGInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetFhGInfo &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindVBR
</UL>

<P><STRONG><a name="[182]"></a>GetFrameLength</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, mpegaudio.o(i.GetFrameLength))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetFrameLength
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSampleRate
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPadding
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBitRate
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindFrame
</UL>

<P><STRONG><a name="[2a5]"></a>GetJobPortStateString</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, menu.o(i.GetJobPortStateString))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetJobPortStateString
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialJobEdit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
</UL>

<P><STRONG><a name="[1a1]"></a>GetJobSourceString</STRONG> (Thumb, 202 bytes, Stack size 96 bytes, menu.o(i.GetJobSourceString))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + Unknown Stack Size
<LI>Call Chain = GetJobSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongno
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getFreqString
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getBandName
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTunerFreq
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTunerBand
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetSourceType
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetSongID
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspYkTask
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialJobEdit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPhoneTask
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspIntercutTask
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspBjSet
</UL>

<P><STRONG><a name="[2cf]"></a>GetKeyPressed</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usrkey.o(i.GetKeyPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetKeyPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_getKey
</UL>

<P><STRONG><a name="[1a0]"></a>GetPadding</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mpegaudio.o(i.GetPadding))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFrameLength
</UL>

<P><STRONG><a name="[1a2]"></a>GetPortStateString</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, menu.o(i.GetPortStateString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetPortStateString
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_GetPortState
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
</UL>

<P><STRONG><a name="[19f]"></a>GetSampleRate</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mpegaudio.o(i.GetSampleRate))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_GetDuration
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFrameLength
</UL>

<P><STRONG><a name="[1a6]"></a>GetSysTime</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hal.o(i.GetSysTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GetSysTime &rArr; rtc_GetTime &rArr; I2CReadByte &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[1b8]"></a>GetTagSize</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, id3v2.o(i.GetTagSize))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v2_ReadFromFile
</UL>

<P><STRONG><a name="[1b4]"></a>GetTagVersion</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, id3v1.o(i.GetTagVersion))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v1_ReadFromFile
</UL>

<P><STRONG><a name="[185]"></a>GetVBRDeviation</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, mpegaudio.o(i.GetVBRDeviation))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindFrame
</UL>

<P><STRONG><a name="[190]"></a>GetXingInfo</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, mpegaudio.o(i.GetXingInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetXingInfo &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindVBR
</UL>

<P><STRONG><a name="[32a]"></a>HEX2BCD</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ds3231.o(i.HEX2BCD))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_SetDateTime
</UL>

<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a8]"></a>HeaderIsValid</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wavfile.o(i.HeaderIsValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HeaderIsValid &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_ReadFromFSFile
</UL>

<P><STRONG><a name="[1a9]"></a>I2CReadByte</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, i2c_ee.o(i.I2CReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2CReadByte &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopCondition
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartCondition
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetDateTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetDate
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetTime
</UL>

<P><STRONG><a name="[1ae]"></a>I2CReadNBytes</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, i2c_ee.o(i.I2CReadNBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2CReadNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopCondition
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartCondition
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperationSi47XX_2w
</UL>

<P><STRONG><a name="[1af]"></a>I2CWriteByte</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, i2c_ee.o(i.I2CWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2CWriteByte &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopCondition
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartCondition
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_SetDateTime
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_Init
</UL>

<P><STRONG><a name="[1b1]"></a>I2CWriteNBytes</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, i2c_ee.o(i.I2CWriteNBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopCondition
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartCondition
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperationSi47XX_2w
</UL>

<P><STRONG><a name="[1b0]"></a>I2C_Delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, i2c_ee.o(i.I2C_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_InitGPIO
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopCondition
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartCondition
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Byte
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteNBytes
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteByte
</UL>

<P><STRONG><a name="[162]"></a>I2C_InitGPIO</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, i2c_ee.o(i.I2C_InitGPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_InitGPIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipHalInit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSi47XX_2w
</UL>

<P><STRONG><a name="[1b2]"></a>ID3v1_ReadFromFile</STRONG> (Thumb, 108 bytes, Stack size 144 bytes, id3v1.o(i.ID3v1_ReadFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ID3v1_ReadFromFile &rArr; ReadTag &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTag
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v1_ResetData
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTagVersion
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFSFile
</UL>

<P><STRONG><a name="[17d]"></a>ID3v1_ResetData</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, id3v1.o(i.ID3v1_ResetData))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v1_ReadFromFile
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FResetData
</UL>

<P><STRONG><a name="[1b6]"></a>ID3v2_ReadFromFile</STRONG> (Thumb, 62 bytes, Stack size 264 bytes, id3v2.o(i.ID3v2_ReadFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = ID3v2_ReadFromFile &rArr; ReadHeader &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadHeader
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v2_ResetData
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTagSize
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFSFile
</UL>

<P><STRONG><a name="[17e]"></a>ID3v2_ResetData</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, id3v2.o(i.ID3v2_ResetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ID3v2_ResetData &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v2_ReadFromFile
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FResetData
</UL>

<P><STRONG><a name="[1d0]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KMG_Init
</UL>

<P><STRONG><a name="[1cf]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KMG_Init
</UL>

<P><STRONG><a name="[1cd]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KMG_Init
</UL>

<P><STRONG><a name="[1ce]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KMG_Init
</UL>

<P><STRONG><a name="[1cc]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KMG_Init
</UL>

<P><STRONG><a name="[94]"></a>InitBjSet</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, menu.o(i.InitBjSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitBjSet &rArr; tjAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>InitGroupList</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, menu.o(i.InitGroupList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitGroupList &rArr; tgAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetCount
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetAt
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgAssign
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>InitIntercutTask</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, menu.o(i.InitIntercutTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitIntercutTask &rArr; itAssign &rArr; tjAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetCount
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetAt
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itInit
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itAssign
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>InitJobEdit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, menu.o(i.InitJobEdit))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>InitJobSongSet</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, menu.o(i.InitJobSongSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008<LI>Call Chain = InitJobSongSet &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDirectoryInfo
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongno
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetSongID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>InitJobTunerSet</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, menu.o(i.InitJobTunerSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitJobTunerSet
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTunerFreq
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTunerBand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>InitMainMenu</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menu.o(i.InitMainMenu))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>InitPhoneTask</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, menu.o(i.InitPhoneTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitPhoneTask &rArr; rtAssign &rArr; tjAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetCount
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetAt
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtInit
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtAssign
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>InitPlayAUX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.InitPlayAUX))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>InitPlayMem</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.InitPlayMem))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>InitPlayUSB</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.InitPlayUSB))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>InitPlayeTuner</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.InitPlayeTuner))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[a6]"></a>InitPortCtrlParam</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, menu.o(i.InitPortCtrlParam))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>InitPortEditParam</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, menu.o(i.InitPortEditParam))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>InitSongViewMenu</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menu.o(i.InitSongViewMenu))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>InitSpecialJobEdit</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, menu.o(i.InitSpecialJobEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = InitSpecialJobEdit &rArr; tjAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetPlayLength
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>InitSystemSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menu.o(i.InitSystemSet))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>InitTaskMannagerMenu</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, menu.o(i.InitTaskMannagerMenu))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>InitTaskView</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, menu.o(i.InitTaskView))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>InitTaskViewList</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, menu.o(i.InitTaskViewList))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = InitTaskViewList &rArr; tmGetTodayTaskGroup &rArr; tmIsSpecialDate &rArr; smValidDate &rArr; MyDateOfDays &rArr; DateOfDays
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>InitYkTask</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, menu.o(i.InitYkTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitYkTask &rArr; rtAssign &rArr; tjAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetCount
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetAt
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtInit
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtAssign
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[18d]"></a>IsSongDir</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, player.o(i.IsSongDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IsSongDir
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharIsNum
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDirectoryInfo
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongno
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
</UL>

<P><STRONG><a name="[18b]"></a>IsSongFile</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, player.o(i.IsSongFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IsSongFile &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_FindSongIndex
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDirectoryInfo
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongno
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
</UL>

<P><STRONG><a name="[36e]"></a>IsValid</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, wmafile.o(i.IsValid))
<BR><BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ReadFromFSFile
</UL>

<P><STRONG><a name="[184]"></a>IsXing</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, mpegaudio.o(i.IsXing))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindFrame
</UL>

<P><STRONG><a name="[1cb]"></a>KMG_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.KMG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KMG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d1]"></a>Key_Config</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, key.o(i.Key_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Key_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_Init
</UL>

<P><STRONG><a name="[1d2]"></a>LCM_GET_DATA</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcm19264.o(i.LCM_GET_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputData
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wtcom
</UL>

<P><STRONG><a name="[1d4]"></a>LCM_SET_DATA</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcm19264.o(i.LCM_SET_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCM_SET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Write
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputData
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcmWriteData
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdR
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdM
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdL
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Locatexy
</UL>

<P><STRONG><a name="[1d6]"></a>LcdBusyL</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcm19264.o(i.LcdBusyL))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LcdBusyL &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wtcom
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdL
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Locatexy
</UL>

<P><STRONG><a name="[1d8]"></a>LcdBusyM</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcm19264.o(i.LcdBusyM))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LcdBusyM &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wtcom
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdM
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Locatexy
</UL>

<P><STRONG><a name="[1d9]"></a>LcdBusyR</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcm19264.o(i.LcdBusyR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LcdBusyR &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wtcom
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdR
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Locatexy
</UL>

<P><STRONG><a name="[1da]"></a>LoadSystemParam</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, menu.o(i.LoadSystemParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = LoadSystemParam &rArr; tjInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[1dd]"></a>LoadUSBPlayPosition</STRONG> (Thumb, 62 bytes, Stack size 560 bytes, player.o(i.LoadUSBPlayPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448<LI>Call Chain = LoadUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_AutoPlayUSB
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_UDiskInsert
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayUSB
</UL>

<P><STRONG><a name="[1e1]"></a>Locatexy</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, lcm19264.o(i.Locatexy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Locatexy &rArr; LcdBusyR &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wtcom
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcmDelay
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBusyR
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBusyM
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBusyL
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCM_SET_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_UpdateLCMData
</UL>

<P><STRONG><a name="[1e3]"></a>Log_Init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, log.o(i.Log_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 904 + Unknown Stack Size
<LI>Call Chain = Log_Init &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_addDate
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e4]"></a>Log_addDate</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, log.o(i.Log_addDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Log_addDate &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetDate
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetTime
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
</UL>

<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a5]"></a>MyDateOfDays</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, task.o(i.MyDateOfDays))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MyDateOfDays &rArr; DateOfDays
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateOfDays
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smValidDate
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgCompareDate
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itValidDate
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecialMode
</UL>

<P><STRONG><a name="[1ec]"></a>MyDateOfWeek</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, task.o(i.MyDateOfWeek))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MyDateOfWeek &rArr; DayOfWeek
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayOfWeek
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetGroupOfDate
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TimeSet
</UL>

<P><STRONG><a name="[1c5]"></a>MyTimeAdd</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, task.o(i.MyTimeAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MyTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondToMyTime
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeToSecond
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetEndTime
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobSongSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpecialJobEdit
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_loadJobParam
</UL>

<P><STRONG><a name="[148]"></a>MyTimeToSecond</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, task.o(i.MyTimeToSecond))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttUpdateTaskState
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttTaskState
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetNewTaskStartTime
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgCompareStartTime
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeAdd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAmpPower
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23a]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_Config
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_NVIC_Configuration
</UL>

<P><STRONG><a name="[239]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_NVIC_Configuration
</UL>

<P><STRONG><a name="[301]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d4]"></a>NumInputProc</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, menu.o(i.NumInputProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NumInputProc
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TimeSet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TaskView
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
</UL>

<P><STRONG><a name="[1ef]"></a>OperationSi47XX_2w</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, si47xx.o(i.OperationSi47XX_2w))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteNBytes
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadNBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Tune_Status
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Tune
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Set_Property
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Power_Up
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Get_Rev
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Wait
</UL>

<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f4]"></a>PollingKey</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, key.o(i.PollingKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PollingKey &rArr; key_out_no
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_out_no
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_out_all
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_in
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyscan_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_keyscan
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_getKey
</UL>

<P><STRONG><a name="[1f9]"></a>Putedot32</STRONG> (Thumb, 34 bytes, Stack size 28 bytes, lcm19264.o(i.Putedot32))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Putedot32 &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_DrawBmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr32
</UL>

<P><STRONG><a name="[168]"></a>RCC1_Configuration</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, com.o(i.RCC1_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC1_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_Init
</UL>

<P><STRONG><a name="[1fb]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_Init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC1_Configuration
</UL>

<P><STRONG><a name="[15e]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Config
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_Configer
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Configuration
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_Config
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_Init
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_Init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC1_Configuration
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375_Configuration
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;si47xx_Configuration
</UL>

<P><STRONG><a name="[161]"></a>RCC_Configuration</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, rcc.o(i.RCC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RCC_Configuration &rArr; SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipHalInit
</UL>

<P><STRONG><a name="[23b]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[2f5]"></a>Rddata</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcm19264.o(i.Rddata))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Point
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_DrawBmp
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_ClrLine
</UL>

<P><STRONG><a name="[1fd]"></a>ReadData</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, wmafile.o(i.ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ReadData &rArr; ReadObject &rArr; ReadTagStandard &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadObject
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ReadFromFSFile
</UL>

<P><STRONG><a name="[1b7]"></a>ReadHeader</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, id3v2.o(i.ReadHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ReadHeader &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v2_ReadFromFile
</UL>

<P><STRONG><a name="[1fe]"></a>ReadObject</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, wmafile.o(i.ReadObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = ReadObject &rArr; ReadTagStandard &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTagStandard
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTagExtended
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>

<P><STRONG><a name="[1b3]"></a>ReadTag</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, id3v1.o(i.ReadTag))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ReadTag &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v1_ReadFromFile
</UL>

<P><STRONG><a name="[200]"></a>ReadTagExtended</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, wmafile.o(i.ReadTagExtended))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = ReadTagExtended &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadObject
</UL>

<P><STRONG><a name="[1ff]"></a>ReadTagStandard</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, wmafile.o(i.ReadTagStandard))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = ReadTagStandard &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadObject
</UL>

<P><STRONG><a name="[201]"></a>ReadWAV</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wavfile.o(i.ReadWAV))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ReadWAV &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_ReadFromFSFile
</UL>

<P><STRONG><a name="[1ac]"></a>Read_Byte</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, i2c_ee.o(i.Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Read_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_set_out
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_set_in
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadNBytes
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadByte
</UL>

<P><STRONG><a name="[165]"></a>ResetSi47XX_2w</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, si47xx.o(i.ResetSi47XX_2w))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ResetSi47XX_2w &rArr; I2C_InitGPIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_InitGPIO
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;si47xx_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipOutHalInit
</UL>

<P><STRONG><a name="[202]"></a>SDA_set_in</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, i2c_ee.o(i.SDA_set_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDA_set_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Byte
</UL>

<P><STRONG><a name="[203]"></a>SDA_set_out</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, i2c_ee.o(i.SDA_set_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Byte
</UL>

<P><STRONG><a name="[3f]"></a>SDIO_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SDIO_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[211]"></a>SD_GetCID</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, msd.o(i.SD_GetCID))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_GetCID &rArr; SD_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_ioctl
</UL>

<P><STRONG><a name="[214]"></a>SD_GetCSD</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, msd.o(i.SD_GetCSD))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_GetCSD &rArr; SD_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCapacity
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_ioctl
</UL>

<P><STRONG><a name="[215]"></a>SD_GetCapacity</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, msd.o(i.SD_GetCapacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SD_GetCapacity &rArr; SD_GetCSD &rArr; SD_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_ioctl
</UL>

<P><STRONG><a name="[216]"></a>SD_Init</STRONG> (Thumb, 500 bytes, Stack size 24 bytes, msd.o(i.SD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_Init &rArr; SD_SendCommand_NoDeassert
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_spi_SetSpeed
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ReadWriteByte
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand_NoDeassert
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_initialize
</UL>

<P><STRONG><a name="[21a]"></a>SD_ReadMultiBlock</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, msd.o(i.SD_ReadMultiBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_ReadMultiBlock &rArr; SD_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_spi_SetSpeed
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ReadWriteByte
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_read
</UL>

<P><STRONG><a name="[213]"></a>SD_ReceiveData</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, msd.o(i.SD_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ReadWriteByte
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlock
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCID
</UL>

<P><STRONG><a name="[212]"></a>SD_SendCommand</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, msd.o(i.SD_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ReadWriteByte
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlock
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlock
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCID
</UL>

<P><STRONG><a name="[219]"></a>SD_SendCommand_NoDeassert</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, msd.o(i.SD_SendCommand_NoDeassert))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_SendCommand_NoDeassert
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ReadWriteByte
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[21c]"></a>SD_WaitReady</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, msd.o(i.SD_WaitReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SD_WaitReady
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlock
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_ioctl
</UL>

<P><STRONG><a name="[21d]"></a>SD_WriteMultiBlock</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, msd.o(i.SD_WriteMultiBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_WriteMultiBlock &rArr; SD_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_spi_SetSpeed
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ReadWriteByte
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReady
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_write
</UL>

<P><STRONG><a name="[366]"></a>SPI2_ReadWriteByte</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, vs1003x.o(i.SPI2_ReadWriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_WriteData
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SoftReset
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_ClearDataBuf
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SineTest
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_REGRead
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_CMDWrite
</UL>

<P><STRONG><a name="[365]"></a>SPI2_SetSpeed</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, vs1003x.o(i.SPI2_SetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_REGRead
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_CMDWrite
</UL>

<P><STRONG><a name="[32e]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_Config
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_Init
</UL>

<P><STRONG><a name="[32f]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_Config
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_Init
</UL>

<P><STRONG><a name="[1db]"></a>STMFLASH_Read</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stmflash.o(i.STMFLASH_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = STMFLASH_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_ReadHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_LoadParam
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemParam
</UL>

<P><STRONG><a name="[21e]"></a>STMFLASH_ReadHalfWord</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stmflash.o(i.STMFLASH_ReadHalfWord))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
</UL>

<P><STRONG><a name="[21f]"></a>STMFLASH_Write</STRONG> (Thumb, 230 bytes, Stack size 2088 bytes, stmflash.o(i.STMFLASH_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 2152<LI>Call Chain = STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SaveParam
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSystemParam
</UL>

<P><STRONG><a name="[221]"></a>STMFLASH_Write_NoCheck</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, stmflash.o(i.STMFLASH_Write_NoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[223]"></a>SaveSystemParam</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, menu.o(i.SaveSystemParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 2160<LI>Call Chain = SaveSystemParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PasswordSet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_BjSet
</UL>

<P><STRONG><a name="[224]"></a>SaveUSBPlayPosition</STRONG> (Thumb, 42 bytes, Stack size 560 bytes, player.o(i.SaveUSBPlayPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448<LI>Call Chain = SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_song
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playusbsong
</UL>

<P><STRONG><a name="[1ee]"></a>SecondToMyTime</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, task.o(i.SecondToMyTime))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetNewTaskStartTime
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeAdd
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTime
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobRuntime
</UL>

<P><STRONG><a name="[1ab]"></a>Send_Byte</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, i2c_ee.o(i.Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_set_out
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_set_in
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteNBytes
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadNBytes
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteByte
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadByte
</UL>

<P><STRONG><a name="[339]"></a>ShortDateOfDays</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, task.o(i.ShortDateOfDays))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglCompareDate
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgValidDate
</UL>

<P><STRONG><a name="[22b]"></a>Si47XX_Get_Rev</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, si47xx.o(i.Si47XX_Get_Rev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Si47XX_Get_Rev &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Wait
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperationSi47XX_2w
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_Init
</UL>

<P><STRONG><a name="[22d]"></a>Si47XX_Power_Up</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, si47xx.o(i.Si47XX_Power_Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Si47XX_Power_Up &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Wait
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperationSi47XX_2w
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_Init
</UL>

<P><STRONG><a name="[22e]"></a>Si47XX_Set_Property</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, si47xx.o(i.Si47XX_Set_Property))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Si47XX_Set_Property &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Wait
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperationSi47XX_2w
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setMute
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchStop
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchStart
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchDo
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_Init
</UL>

<P><STRONG><a name="[22f]"></a>Si47XX_Tune</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, si47xx.o(i.Si47XX_Tune))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Si47XX_Tune &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Wait
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperationSi47XX_2w
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setFreq
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_Init
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_FreqInc
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_FreqDec
</UL>

<P><STRONG><a name="[230]"></a>Si47XX_Tune_Status</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, si47xx.o(i.Si47XX_Tune_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Si47XX_Tune_Status &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Wait
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperationSi47XX_2w
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getStatus
</UL>

<P><STRONG><a name="[22c]"></a>Si47XX_Wait</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, si47xx.o(i.Si47XX_Wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OperationSi47XX_2w
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Tune_Status
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Tune
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Set_Property
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Power_Up
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Get_Rev
</UL>

<P><STRONG><a name="[1aa]"></a>StartCondition</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, i2c_ee.o(i.StartCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = StartCondition
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteNBytes
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadNBytes
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteByte
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadByte
</UL>

<P><STRONG><a name="[1ad]"></a>StopCondition</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, i2c_ee.o(i.StopCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = StopCondition
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteNBytes
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadNBytes
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteByte
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadByte
</UL>

<P><STRONG><a name="[205]"></a>SysTickDelay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rcc.o(i.SysTickDelay))
<BR><BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SoftReset
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_getKey
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSi47XX_2w
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Tune
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Power_Up
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Reset
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Init
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_DiskIsReady
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SineTest
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFC16PortState
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_Reset
</UL>

<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1fc]"></a>SystemInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[231]"></a>UART_PutChar</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, com.o(i.UART_PutChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutStr
</UL>

<P><STRONG><a name="[233]"></a>UART_PutStr</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, com.o(i.UART_PutStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_PutStr &rArr; UART_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFC16PortState
</UL>

<P><STRONG><a name="[16a]"></a>USART1_Configuration</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, com.o(i.USART1_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART1_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_Init
</UL>

<P><STRONG><a name="[33]"></a>USART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16b]"></a>USART2_Configuration</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, com.o(i.USART2_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART2_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_Init
</UL>

<P><STRONG><a name="[34]"></a>USART2_IRQHandler</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, stm32f10x_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16c]"></a>USART2_NVIC_Configuration</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, com.o(i.USART2_NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com_Init
</UL>

<P><STRONG><a name="[235]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
</UL>

<P><STRONG><a name="[232]"></a>USART_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
</UL>

<P><STRONG><a name="[237]"></a>USART_GetITStatus</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[236]"></a>USART_ITConfig</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
</UL>

<P><STRONG><a name="[234]"></a>USART_Init</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
</UL>

<P><STRONG><a name="[238]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[21]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USB_HP_CAN1_TX_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USB_LP_CAN1_RX0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[242]"></a>WrcmdL</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcm19264.o(i.WrcmdL))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WrcmdL &rArr; LcdBusyL &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcmDelay
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBusyL
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCM_SET_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_DisplayOpen
</UL>

<P><STRONG><a name="[243]"></a>WrcmdM</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcm19264.o(i.WrcmdM))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WrcmdM &rArr; LcdBusyM &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcmDelay
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBusyM
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCM_SET_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_DisplayOpen
</UL>

<P><STRONG><a name="[244]"></a>WrcmdR</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcm19264.o(i.WrcmdR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WrcmdR &rArr; LcdBusyR &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcmDelay
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBusyR
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCM_SET_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_DisplayOpen
</UL>

<P><STRONG><a name="[24d]"></a>_SetFC16PortState</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, audio.o(i._SetFC16PortState))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetFC16PortState &rArr; UART_PutStr &rArr; UART_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutStr
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetPortState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetBjPortState
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
</UL>

<P><STRONG><a name="[24e]"></a>_SetPortState</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, audio.o(i._SetPortState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetPortState
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetPortState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetBjPortState
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
</UL>

<P><STRONG><a name="[12e]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[116]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[174]"></a>_keyscan</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usrkey.o(i._keyscan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _keyscan &rArr; PollingKey &rArr; key_out_no
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollingKey
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[250]"></a>_playmemsong</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, player.o(i._playmemsong))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = _playmemsong &rArr; player_OpenFile &rArr; FindSongIndex &rArr; sd_FindSongIndex &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_UpdateSongDir
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Play
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayMemBj
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayMem
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_AutoPlayMem
</UL>

<P><STRONG><a name="[254]"></a>_playusbsong</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, player.o(i._playusbsong))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464<LI>Call Chain = _playusbsong &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_UpdateSongDir
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Play
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUSBPlayPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayUSB
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_AutoPlayUSB
</UL>

<P><STRONG><a name="[256]"></a>_setSource</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, audio.o(i._setSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _setSource
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSourceMute
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
</UL>

<P><STRONG><a name="[257]"></a>_stopPlay</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, player.o(i._stopPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _stopPlay &rArr; f_close &rArr; f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_ResetDecodeTime
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_ClearDataBuf
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSourceMute
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_ReadData
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayDo
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_song
</UL>

<P><STRONG><a name="[171]"></a>add_queue</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, queue.o(i.add_queue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = add_queue
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_TimerQueueInit
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>

<P><STRONG><a name="[2cc]"></a>alAddElement</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, arraylist.o(i.alAddElement))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = alAddElement
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglInit
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgNew
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglNew
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgNew
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgNew
</UL>

<P><STRONG><a name="[2c5]"></a>alClear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, arraylist.o(i.alClear))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglClear
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgClear
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgAssign
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglClear
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgClear
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgClear
</UL>

<P><STRONG><a name="[2c8]"></a>alGetElement</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arraylist.o(i.alGetElement))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetAt
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetAt
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetAt
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetAt
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetAt
</UL>

<P><STRONG><a name="[2ca]"></a>alInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, arraylist.o(i.alInit))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglInit
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgInit
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglInit
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgInit
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgInit
</UL>

<P><STRONG><a name="[2c7]"></a>alRemoveIndex</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, arraylist.o(i.alRemoveIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgDeleteIndex
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglDeleteIndex
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgDeleteIndex
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgDeleteIndex
</UL>

<P><STRONG><a name="[345]"></a>alSort</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, arraylist.o(i.alSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = alSort
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgSort
</UL>

<P><STRONG><a name="[25a]"></a>alloc_queue</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, queue.o(i.alloc_queue))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_queue
</UL>

<P><STRONG><a name="[14b]"></a>audio_AmpPowerOpen</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio.o(i.audio_AmpPowerOpen))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTaskGroup
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayBj
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_Desktop
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAmpPower
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[25b]"></a>audio_AuxPowerOpen</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, audio.o(i.audio_AuxPowerOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_AuxPowerOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
</UL>

<P><STRONG><a name="[1a3]"></a>audio_GetPortState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, audio.o(i.audio_GetPortState))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PortCtrl
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPortCtrl
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPortStateString
</UL>

<P><STRONG><a name="[25c]"></a>audio_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, audio.o(i.audio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[140]"></a>audio_SetAllPortState</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, audio.o(i.audio_SetAllPortState))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = audio_SetAllPortState &rArr; _SetFC16PortState &rArr; UART_PutStr &rArr; UART_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPortState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFC16PortState
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTaskGroup
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayPhone
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayMem
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayBj
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayAUX
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PasswordInput
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_Desktop
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoRemoteTaskDo
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[25d]"></a>audio_SetBjPortState</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, audio.o(i.audio_SetBjPortState))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = audio_SetBjPortState &rArr; _SetFC16PortState &rArr; UART_PutStr &rArr; UART_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPortState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFC16PortState
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
</UL>

<P><STRONG><a name="[25e]"></a>audio_SetPortState</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, audio.o(i.audio_SetPortState))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = audio_SetPortState &rArr; _SetFC16PortState &rArr; UART_PutStr &rArr; UART_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPortState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFC16PortState
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PortCtrl
</UL>

<P><STRONG><a name="[155]"></a>audio_getSource</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio.o(i.audio_getSource))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JobRunCounterDo
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[141]"></a>audio_setSource</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, audio.o(i.audio_setSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = audio_setSource &rArr; tuner_setMute &rArr; Si47XX_Set_Property &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setMute
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_AuxPowerOpen
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setSource
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTaskGroup
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayMem
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayBj
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayAUX
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayUSB
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTuner
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayMem
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayAUX
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMainMenu
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoRemoteTaskDo
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JobRunCounterDo
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[1ea]"></a>audio_setSourceMute</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, audio.o(i.audio_setSourceMute))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_setSourceMute &rArr; _setSource
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setSource
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Play
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Pause
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stopPlay
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicphonePrioriDo
</UL>

<P><STRONG><a name="[262]"></a>ch375_Delay</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ch375.o(i.ch375_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetUSBStatus
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_usb_data
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_usb_data
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_SetDiskLun
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetIntStatus
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetDiskSize
</UL>

<P><STRONG><a name="[240]"></a>ch375_DiskIsReady</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ch375.o(i.ch375_DiskIsReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ch375_DiskIsReady &rArr; CH375DiskReady &rArr; CH375s23 &rArr; CH375s05 &rArr; CH375DiskConnect &rArr; CH375s40 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskReady
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskConnect
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBChangeDo
</UL>

<P><STRONG><a name="[260]"></a>ch375_GetDiskSize</STRONG> (Thumb, 168 bytes, Stack size 96 bytes, ch375.o(i.ch375_GetDiskSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_usb_data
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_SetDiskLun
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetIntStatus
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_disk_ioctl
</UL>

<P><STRONG><a name="[263]"></a>ch375_GetIntStatus</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, ch375.o(i.ch375_GetIntStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ch375_GetIntStatus &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_WriteSec
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_ReadSec
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetDiskSize
</UL>

<P><STRONG><a name="[23d]"></a>ch375_GetUSBStatus</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, ch375.o(i.ch375_GetUSBStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ch375_GetUSBStatus &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBChangeDo
</UL>

<P><STRONG><a name="[265]"></a>ch375_Init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, ch375.o(i.ch375_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ch375_Init &rArr; CH375LibInit &rArr; CH375Init &rArr; CH375s43 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375_Configuration
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375LibInit
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[266]"></a>ch375_ReadSec</STRONG> (Thumb, 148 bytes, Stack size 28 bytes, ch375.o(i.ch375_ReadSec))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ch375_ReadSec &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_usb_data
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_disk_read
</UL>

<P><STRONG><a name="[23e]"></a>ch375_Reset</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ch375.o(i.ch375_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ch375_Reset &rArr; CH375LibInit &rArr; CH375Init &rArr; CH375s43 &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375LibInit
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBChangeDo
</UL>

<P><STRONG><a name="[261]"></a>ch375_SetDiskLun</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ch375.o(i.ch375_SetDiskLun))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ch375_SetDiskLun &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetDiskSize
</UL>

<P><STRONG><a name="[267]"></a>ch375_WriteSec</STRONG> (Thumb, 184 bytes, Stack size 28 bytes, ch375.o(i.ch375_WriteSec))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_usb_data
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_disk_write
</UL>

<P><STRONG><a name="[27e]"></a>clust2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[371]"></a>delay_us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal.o(i.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xDelay100uS
</UL>

<P><STRONG><a name="[26d]"></a>disk_initialize</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = disk_initialize &rArr; msd_disk_initialize &rArr; SD_Init &rArr; SD_SendCommand_NoDeassert
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_disk_initialize
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[287]"></a>disk_ioctl</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_disk_ioctl
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[26a]"></a>disk_read</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = disk_read &rArr; usb_disk_read &rArr; ch375_ReadSec &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_disk_read
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[26c]"></a>disk_status</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, diskio.o(i.disk_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_status
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_disk_status
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[28e]"></a>disk_write</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_disk_write
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[291]"></a>dspAmplifierState</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu.o(i.dspAmplifierState))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = dspAmplifierState &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
</UL>

<P><STRONG><a name="[95]"></a>dspBjSet</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, menu.o(i.dspBjSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = dspBjSet &rArr; GetJobSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[295]"></a>dspChannel</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, menu.o(i.dspChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = dspChannel &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTuner
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobTunerSet
</UL>

<P><STRONG><a name="[56]"></a>dspDesktop</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, menu.o(i.dspDesktop))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = dspDesktop &rArr; dspDesktopTask &rArr; GetDesktopSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetDateTime
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Linexy
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_UpdateTodayTask
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSysTime
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSysDate
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAmpPower
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Start
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[145]"></a>dspDesktopTask</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, menu.o(i.dspDesktopTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = dspDesktopTask &rArr; GetDesktopSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetNextTaskID
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetNextTask
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetCount
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ClrClient
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTime
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMemoryStatus
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobRuntime
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktop
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoRemoteTaskDo
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JobRunCounterDo
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[294]"></a>dspDrawRect</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, menu.o(i.dspDrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dspDrawRect &rArr; lcm_Linexy &rArr; lcm_Point
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Linexy
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspYkTask
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTimeSet
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskView
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskManagerMenu
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSystemSet
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialMode
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialJobEdit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewUSB
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewMenu
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewMem
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPortEdit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPortCtrl
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPhoneTask
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPasswordSet
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPasswordInput
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMainMenu
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobTunerSet
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobSongSet
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspIntercutTask
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspGroupList
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspBjSet
</UL>

<P><STRONG><a name="[293]"></a>dspDrawTitle</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, menu.o(i.dspDrawTitle))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Linexy
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspYkTask
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTimeSet
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskView
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskManagerMenu
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSystemSet
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialMode
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewUSB
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewMenu
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewMem
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPortEdit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPortCtrl
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPhoneTask
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPasswordSet
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPasswordInput
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMainMenu
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobTunerSet
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobSongSet
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspIntercutTask
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspGroupList
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspBjSet
</UL>

<P><STRONG><a name="[29d]"></a>dspFMFreqInputNum</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, menu.o(i.dspFMFreqInputNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = dspFMFreqInputNum &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
</UL>

<P><STRONG><a name="[81]"></a>dspGroupList</STRONG> (Thumb, 558 bytes, Stack size 24 bytes, menu.o(i.dspGroupList))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = dspGroupList &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetCount
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[29e]"></a>dspInputNum</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, menu.o(i.dspInputNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = dspInputNum &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TimeSet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TaskView
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
</UL>

<P><STRONG><a name="[84]"></a>dspIntercutTask</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, menu.o(i.dspIntercutTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = dspIntercutTask &rArr; GetJobSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetCount
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>dspJobEdit</STRONG> (Thumb, 788 bytes, Stack size 32 bytes, menu.o(i.dspJobEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = dspJobEdit &rArr; GetJobSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getCurrentFreq
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getBand
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetAt
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetCount
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetAt
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetTunerFreq
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetTunerBand
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetSourceType
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Linexy
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEndTime
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobPortStateString
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_loadJobParam
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NewJobParam
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[2a6]"></a>dspJobEndTime</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, menu.o(i.dspJobEndTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = dspJobEndTime &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialJobEdit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
</UL>

<P><STRONG><a name="[1ca]"></a>dspJobRuntime</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu.o(i.dspJobRuntime))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = dspJobRuntime &rArr; dspTime &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondToMyTime
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTime
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JobRunCounterDo
</UL>

<P><STRONG><a name="[98]"></a>dspJobSongSet</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, menu.o(i.dspJobSongSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 968 + Unknown Stack Size
<LI>Call Chain = dspJobSongSet &rArr; dspSongNumView &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>dspJobTunerSet</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, menu.o(i.dspJobTunerSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = dspJobTunerSet &rArr; tuner_getFreqString &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getFreqString
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getBandName
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspChannel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>dspMainMenu</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, menu.o(i.dspMainMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = dspMainMenu &rArr; menu_StopPlay &rArr; player_Stop &rArr; _stopPlay &rArr; f_close &rArr; f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_StopPlay
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[2a8]"></a>dspManualFrame</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, menu.o(i.dspManualFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = dspManualFrame &rArr; dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Linexy
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspAmplifierState
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPortStateString
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayYj
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayUSB
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTuner
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayPhone
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayMem
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayBj
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayAUX
</UL>

<P><STRONG><a name="[210]"></a>dspMemoryStatus</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, menu.o(i.dspMemoryStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = dspMemoryStatus &rArr; DspSongName &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ClrClient
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayerState
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTime
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayMem
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
</UL>

<P><STRONG><a name="[6a]"></a>dspPasswordInput</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, menu.o(i.dspPasswordInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = dspPasswordInput &rArr; dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>dspPasswordSet</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, menu.o(i.dspPasswordSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = dspPasswordSet &rArr; dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>dspPhoneTask</STRONG> (Thumb, 522 bytes, Stack size 32 bytes, menu.o(i.dspPhoneTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = dspPhoneTask &rArr; GetJobSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetCount
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskType
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskFuncValue
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>dspPlayAUX</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, menu.o(i.dspPlayAUX))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = dspPlayAUX &rArr; audio_setSource &rArr; tuner_setMute &rArr; Si47XX_Set_Property &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>dspPlayBj</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, menu.o(i.dspPlayBj))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = dspPlayBj &rArr; DspSongName &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>dspPlayMem</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, menu.o(i.dspPlayMem))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224 + Unknown Stack Size
<LI>Call Chain = dspPlayMem &rArr; player_PlayMem &rArr; _playmemsong &rArr; player_OpenFile &rArr; FindSongIndex &rArr; sd_FindSongIndex &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayMem
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMemoryStatus
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>dspPlayPhone</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu.o(i.dspPlayPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = dspPlayPhone &rArr; dspManualFrame &rArr; dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[229]"></a>dspPlayTime</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, menu.o(i.dspPlayTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = dspPlayTime &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondToMyTime
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_GetDecodeTime
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayUSB
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMemoryStatus
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStatus
</UL>

<P><STRONG><a name="[59]"></a>dspPlayTuner</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, menu.o(i.dspPlayTuner))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = dspPlayTuner &rArr; dspTunerFreq &rArr; tuner_getFreqString &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getBandName
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTunerFreq
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspChannel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>dspPlayUSB</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, menu.o(i.dspPlayUSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496 + Unknown Stack Size
<LI>Call Chain = dspPlayUSB &rArr; player_PlayUSB &rArr; _playusbsong &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayUSB
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUSBPlayPosition
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspUSBDiskStatus
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayerState
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTime
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>dspPlayYj</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, menu.o(i.dspPlayYj))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = dspPlayYj &rArr; dspManualFrame &rArr; dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[22a]"></a>dspPlayerState</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, menu.o(i.dspPlayerState))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dspPlayerState &rArr; lcm_PutPlayerdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_getState
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_PutPlayerdot
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayUSB
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMemoryStatus
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStatus
</UL>

<P><STRONG><a name="[a7]"></a>dspPortCtrl</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, menu.o(i.dspPortCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = dspPortCtrl &rArr; dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_GetPortState
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[a4]"></a>dspPortEdit</STRONG> (Thumb, 424 bytes, Stack size 24 bytes, menu.o(i.dspPortEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = dspPortEdit &rArr; dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[2a7]"></a>dspSongNumView</STRONG> (Thumb, 374 bytes, Stack size 128 bytes, menu.o(i.dspSongNumView))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = dspSongNumView &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSongno
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongFile
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongDir
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobSongSet
</UL>

<P><STRONG><a name="[2af]"></a>dspSongView</STRONG> (Thumb, 338 bytes, Stack size 128 bytes, menu.o(i.dspSongView))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = dspSongView &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongFile
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongDir
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewUSB
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewMem
</UL>

<P><STRONG><a name="[8c]"></a>dspSongViewMem</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, menu.o(i.dspSongViewMem))
<BR><BR>[Stack]<UL><LI>Max Depth = 968 + Unknown Stack Size
<LI>Call Chain = dspSongViewMem &rArr; dspSongView &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDirectoryInfo
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongView
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>dspSongViewMenu</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, menu.o(i.dspSongViewMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = dspSongViewMenu &rArr; dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>dspSongViewUSB</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, menu.o(i.dspSongViewUSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 968 + Unknown Stack Size
<LI>Call Chain = dspSongViewUSB &rArr; dspSongView &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDirectoryInfo
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongView
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>dspSpecialJobEdit</STRONG> (Thumb, 512 bytes, Stack size 32 bytes, menu.o(i.dspSpecialJobEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = dspSpecialJobEdit &rArr; GetJobSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Linexy
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEndTime
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobPortStateString
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>dspSpecialMode</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, menu.o(i.dspSpecialMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = dspSpecialMode &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecialMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[298]"></a>dspSysDate</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, menu.o(i.dspSysDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = dspSysDate &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktop
</UL>

<P><STRONG><a name="[299]"></a>dspSysTime</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, menu.o(i.dspSysTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = dspSysTime &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr32
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktop
</UL>

<P><STRONG><a name="[76]"></a>dspSystemSet</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, menu.o(i.dspSystemSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = dspSystemSet &rArr; dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>dspTaskManagerMenu</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, menu.o(i.dspTaskManagerMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = dspTaskManagerMenu &rArr; dspDrawTitle &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>dspTaskView</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, menu.o(i.dspTaskView))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = dspTaskView &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>dspTaskViewList</STRONG> (Thumb, 410 bytes, Stack size 40 bytes, menu.o(i.dspTaskViewList))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = dspTaskViewList &rArr; GetJobSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetCount
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetAt
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetEndTime
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_ClrLine
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTime
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobPortStateString
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[29c]"></a>dspTime</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, menu.o(i.dspTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = dspTime &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobRuntime
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
</UL>

<P><STRONG><a name="[90]"></a>dspTimeSet</STRONG> (Thumb, 414 bytes, Stack size 16 bytes, menu.o(i.dspTimeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = dspTimeSet &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[2ac]"></a>dspTunerFreq</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, menu.o(i.dspTunerFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = dspTunerFreq &rArr; tuner_getFreqString &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getFreqString
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTuner
</UL>

<P><STRONG><a name="[228]"></a>dspTunerSingle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, menu.o(i.dspTunerSingle))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = dspTunerSingle &rArr; tuner_getStatus &rArr; Si47XX_Tune_Status &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getValidSingle
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getStatus
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_PutPlayerdot
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStatus
</UL>

<P><STRONG><a name="[23f]"></a>dspUSBDiskStatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, menu.o(i.dspUSBDiskStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = dspUSBDiskStatus &rArr; DspSongName &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ClrClient
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayUSB
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBChangeDo
</UL>

<P><STRONG><a name="[2b4]"></a>dspWelcome</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, menu.o(i.dspWelcome))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = dspWelcome &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_UpdateLCMData
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[87]"></a>dspYkTask</STRONG> (Thumb, 524 bytes, Stack size 32 bytes, menu.o(i.dspYkTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = dspYkTask &rArr; GetJobSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetCount
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskType
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskFuncValue
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[1e0]"></a>f_close</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ReadFromFile
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_ReadFromFile
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFile
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stopPlay
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUSBPlayPosition
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUSBPlayPosition
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveToFile
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadFromFile
</UL>

<P><STRONG><a name="[1e5]"></a>f_lseek</STRONG> (Thumb, 430 bytes, Stack size 32 bytes, ff.o(i.f_lseek))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTag
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTagStandard
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTagExtended
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadObject
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFSFile
</UL>

<P><STRONG><a name="[208]"></a>f_mount</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ff.o(i.f_mount))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBChangeDo
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
</UL>

<P><STRONG><a name="[1de]"></a>f_open</STRONG> (Thumb, 358 bytes, Stack size 600 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ReadFromFile
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_ReadFromFile
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFile
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUSBPlayPosition
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUSBPlayPosition
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveToFile
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadFromFile
</UL>

<P><STRONG><a name="[18a]"></a>f_opendir</STRONG> (Thumb, 120 bytes, Stack size 552 bytes, ff.o(i.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_FindSongIndex
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDirectoryInfo
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongno
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_IsValid
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
</UL>

<P><STRONG><a name="[1df]"></a>f_read</STRONG> (Thumb, 458 bytes, Stack size 64 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_ReadData
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUSBPlayPosition
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadYkTaskFromFile
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadTaskGroupsFromFile
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadTaskGroupFromFile
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadSpecModeFromFile
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadPhoneTaskFromFile
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobTaskFromFile
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobFromFile
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadIntercutTaskFromFile
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadHeaderFromFile
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadHeader
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTag
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTagStandard
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTagExtended
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadObject
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWAV
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFSFile
</UL>

<P><STRONG><a name="[18e]"></a>f_readdir</STRONG> (Thumb, 100 bytes, Stack size 544 bytes, ff.o(i.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_FindSongIndex
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDirectoryInfo
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongno
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
</UL>

<P><STRONG><a name="[1e7]"></a>f_sync</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
</UL>

<P><STRONG><a name="[1e6]"></a>f_write</STRONG> (Thumb, 524 bytes, Stack size 64 bytes, ff.o(i.f_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUSBPlayPosition
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveTaskGroupsToFile
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveTaskGroupToFile
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveSpecModeFromFile
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobToFile
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobTaskToFile
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveIntercutTaskFromFile
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveHeaderToFile
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSaveYkTaskFromFile
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSavePhoneTaskFromFile
</UL>

<P><STRONG><a name="[2be]"></a>ff_convert</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, cc936.o(i.ff_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>

<P><STRONG><a name="[26f]"></a>ff_wtoupper</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cc936.o(i.ff_wtoupper))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[2f4]"></a>fill_lcm_buffer</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, lcm19264.o(i.fill_lcm_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fill_lcm_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Init
</UL>

<P><STRONG><a name="[328]"></a>free_queue</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, queue.o(i.free_queue))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_queue
</UL>

<P><STRONG><a name="[283]"></a>gen_numname</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, ff.o(i.gen_numname))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gen_numname &rArr; mem_cpy
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[18c]"></a>getSongno</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, player.o(i.getSongno))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = getSongno
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CharIsNum
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDirectoryInfo
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongno
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobSongSet
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
</UL>

<P><STRONG><a name="[271]"></a>get_fat</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[2b8]"></a>get_fattime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, msd.o(i.get_fattime))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[2fb]"></a>getdot24index</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, lcm19264.o(i.getdot24index))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = getdot24index
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr32
</UL>

<P><STRONG><a name="[1bf]"></a>itAssign</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, task.o(i.itAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = itAssign &rArr; tjAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itSetTaskMyDate
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetTaskJob
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetTaskDate
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitIntercutTask
</UL>

<P><STRONG><a name="[358]"></a>itGetDateBuffer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, task.o(i.itGetDateBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveIntercutTaskFromFile
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadIntercutTaskFromFile
</UL>

<P><STRONG><a name="[357]"></a>itGetDateBufferSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.itGetDateBufferSize))
<BR><BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveIntercutTaskFromFile
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadIntercutTaskFromFile
</UL>

<P><STRONG><a name="[2bf]"></a>itGetTaskDate</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, task.o(i.itGetTaskDate))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgCompareDate
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itValidDate
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itAssign
</UL>

<P><STRONG><a name="[2c1]"></a>itGetTaskJob</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.itGetTaskJob))
<BR><BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveIntercutTaskFromFile
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadIntercutTaskFromFile
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itAssign
</UL>

<P><STRONG><a name="[1c0]"></a>itInit</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, task.o(i.itInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = itInit &rArr; tjInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itSetTaskMyDate
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitIntercutTask
</UL>

<P><STRONG><a name="[2c0]"></a>itSetTaskMyDate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, task.o(i.itSetTaskMyDate))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itInit
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itAssign
</UL>

<P><STRONG><a name="[2c2]"></a>itValidDate</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, task.o(i.itValidDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = itValidDate &rArr; MyDateOfDays &rArr; DateOfDays
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetTaskDate
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyDateOfDays
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
</UL>

<P><STRONG><a name="[2c3]"></a>itgCanAddNew</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, task.o(i.itgCanAddNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = itgCanAddNew
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgNew
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
</UL>

<P><STRONG><a name="[2c4]"></a>itgClear</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, task.o(i.itgClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = itgClear
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alClear
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmResetTaskData
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadIntercutTaskFromFile
</UL>

<P><STRONG><a name="[50]"></a>itgCompareDate</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, task.o(i.itgCompareDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = itgCompareDate &rArr; MyDateOfDays &rArr; DateOfDays
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetTaskDate
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyDateOfDays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(i.itgInit)
</UL>
<P><STRONG><a name="[2c6]"></a>itgDeleteIndex</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, task.o(i.itgDeleteIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = itgDeleteIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alRemoveIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
</UL>

<P><STRONG><a name="[1be]"></a>itgGetAt</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, task.o(i.itgGetAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = itgGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alGetElement
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveIntercutTaskFromFile
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitIntercutTask
</UL>

<P><STRONG><a name="[1bd]"></a>itgGetCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, task.o(i.itgGetCount))
<BR><BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveIntercutTaskFromFile
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgCanAddNew
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspIntercutTask
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitIntercutTask
</UL>

<P><STRONG><a name="[2c9]"></a>itgInit</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, task.o(i.itgInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = itgInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alInit
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmInit
</UL>

<P><STRONG><a name="[2cb]"></a>itgNew</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, task.o(i.itgNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = itgNew &rArr; alAddElement
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alAddElement
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgCanAddNew
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadIntercutTaskFromFile
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
</UL>

<P><STRONG><a name="[2cd]"></a>kb_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usrkey.o(i.kb_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kb_Init &rArr; Key_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[305]"></a>kb_IslongPress</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usrkey.o(i.kb_IslongPress))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ce]"></a>kb_getKey</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, usrkey.o(i.kb_getKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kb_getKey &rArr; PollingKey &rArr; key_out_no
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollingKey
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyPressed
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f7]"></a>key_in</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, key.o(i.key_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = key_in
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollingKey
</UL>

<P><STRONG><a name="[1f8]"></a>key_out_all</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, key.o(i.key_out_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = key_out_all
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollingKey
</UL>

<P><STRONG><a name="[1f5]"></a>key_out_no</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, key.o(i.key_out_no))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = key_out_no
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollingKey
</UL>

<P><STRONG><a name="[93]"></a>keydo_BjSet</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, menu.o(i.keydo_BjSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 2184<LI>Call Chain = keydo_BjSet &rArr; SaveSystemParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSystemParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[318]"></a>keydo_Default</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, menu.o(i.keydo_Default))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = keydo_Default
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
</UL>

<P><STRONG><a name="[55]"></a>keydo_Desktop</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, menu.o(i.keydo_Desktop))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = keydo_Desktop &rArr; menu_StopPlay &rArr; player_Stop &rArr; _stopPlay &rArr; f_close &rArr; f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_AmpPowerOpen
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_StopPlay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>keydo_GroupList</STRONG> (Thumb, 928 bytes, Stack size 40 bytes, menu.o(i.keydo_GroupList))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = keydo_GroupList &rArr; tglNew &rArr; alAddElement
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglNew
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetCount
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetAt
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglDeleteIndex
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglCanAddNew
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgInit
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgAssign
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>keydo_IntercutTask</STRONG> (Thumb, 918 bytes, Stack size 48 bytes, menu.o(i.keydo_IntercutTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = keydo_IntercutTask &rArr; dspInputNum &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgNew
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetCount
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetAt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgDeleteIndex
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgCanAddNew
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itInit
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itAssign
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumInputProc
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DateIsValid
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>keydo_JobEdit</STRONG> (Thumb, 1816 bytes, Stack size 64 bytes, menu.o(i.keydo_JobEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = keydo_JobEdit &rArr; dspInputNum &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getCurrentFreq
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getBand
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetCount
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetAt
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgNew
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetCount
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetAt
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgDeleteIndex
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetTunerFreq
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetTunerBand
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetSongType
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetSongID
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetPlayLength
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetPlayLength
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBufferSize
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBuffer
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeToSecond
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeAdd
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEndTime
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumInputProc
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_loadJobParam
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TimeIsValid
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NewJobParam
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitJobParam
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>keydo_JobSongSet</STRONG> (Thumb, 348 bytes, Stack size 32 bytes, menu.o(i.keydo_JobSongSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 5216<LI>Call Chain = keydo_JobSongSet &rArr; GetAudioLength &rArr; mp3_ReadFromFile &rArr; mp3_ReadFromFSFile &rArr; ID3v2_ReadFromFile &rArr; ReadHeader &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSongno
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAudioLength
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetSongID
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetPlayLength
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetPlayLength
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeAdd
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>keydo_JobTunerSet</STRONG> (Thumb, 852 bytes, Stack size 40 bytes, menu.o(i.keydo_JobTunerSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = keydo_JobTunerSet &rArr; dspFMFreqInputNum &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getStepFreq
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getStationFreq
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getStationCount
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getMinFreq
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getMaxFreq
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getCurrentFreq
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetTunerFreq
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetTunerBand
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspFMFreqInputNum
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumInputProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>keydo_MainMenu</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, menu.o(i.keydo_MainMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = keydo_MainMenu &rArr; tmSaveToFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveToFile
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>keydo_PasswordInput</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, menu.o(i.keydo_PasswordInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = keydo_PasswordInput &rArr; player_Stop &rArr; _stopPlay &rArr; f_close &rArr; f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAmpPower
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>keydo_PasswordSet</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, menu.o(i.keydo_PasswordSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 2184<LI>Call Chain = keydo_PasswordSet &rArr; SaveSystemParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSystemParam
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>keydo_PhoneTask</STRONG> (Thumb, 836 bytes, Stack size 48 bytes, menu.o(i.keydo_PhoneTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = keydo_PhoneTask &rArr; dspInputNum &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgNew
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetCount
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetAt
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgDeleteIndex
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgCanAddNew
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtSetTaskFuncValue
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtInit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskType
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskFuncValue
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtAssign
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumInputProc
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>keydo_PlayAUX</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, menu.o(i.keydo_PlayAUX))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = keydo_PlayAUX &rArr; audio_setSource &rArr; tuner_setMute &rArr; Si47XX_Set_Property &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>keydo_PlayBj</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, menu.o(i.keydo_PlayBj))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = keydo_PlayBj &rArr; player_OpenFile &rArr; FindSongIndex &rArr; sd_FindSongIndex &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_getState
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Play
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Pause
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_AmpPowerOpen
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_StopPlay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>keydo_PlayMem</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, menu.o(i.keydo_PlayMem))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496<LI>Call Chain = keydo_PlayMem &rArr; player_Prev &rArr; next_song &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_getState
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Prev
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Play
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Pause
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Next
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_StopPlay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>keydo_PlayPhone</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, menu.o(i.keydo_PlayPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = keydo_PlayPhone &rArr; audio_SetAllPortState &rArr; _SetFC16PortState &rArr; UART_PutStr &rArr; UART_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>keydo_PlayTuner</STRONG> (Thumb, 560 bytes, Stack size 40 bytes, menu.o(i.keydo_PlayTuner))
<BR><BR>[Stack]<UL><LI>Max Depth = 2216 + Unknown Stack Size
<LI>Call Chain = keydo_PlayTuner &rArr; tuner_setCurrentFreq &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setCurrentFreq
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_saveFreq
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getStationFreq
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchStart
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SaveAll
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_FreqInc
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_FreqDec
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspChannel
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumInputProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[60]"></a>keydo_PlayUSB</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, menu.o(i.keydo_PlayUSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496<LI>Call Chain = keydo_PlayUSB &rArr; player_Prev &rArr; next_song &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_getState
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Prev
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Play
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Pause
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Next
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_StopPlay
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>keydo_PlayYj</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, menu.o(i.keydo_PlayYj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keydo_PlayYj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>keydo_PortCtrl</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, menu.o(i.keydo_PortCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = keydo_PortCtrl &rArr; audio_SetPortState &rArr; _SetFC16PortState &rArr; UART_PutStr &rArr; UART_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetPortState
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_GetPortState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>keydo_PortEdit</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, menu.o(i.keydo_PortEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = keydo_PortEdit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>keydo_SongViewMem</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, menu.o(i.keydo_SongViewMem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keydo_SongViewMem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>keydo_SongViewMenu</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, menu.o(i.keydo_SongViewMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keydo_SongViewMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>keydo_SongViewUSB</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, menu.o(i.keydo_SongViewUSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keydo_SongViewUSB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>keydo_SpecialJobEdit</STRONG> (Thumb, 1386 bytes, Stack size 56 bytes, menu.o(i.keydo_SpecialJobEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = keydo_SpecialJobEdit &rArr; dspInputNum &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getCurrentFreq
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getBand
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetTunerFreq
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetTunerBand
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetSongType
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetSongID
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetPlayLength
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetPlayLength
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBufferSize
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBuffer
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeToSecond
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeAdd
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEndTime
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumInputProc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[77]"></a>keydo_SpecialMode</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, menu.o(i.keydo_SpecialMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keydo_SpecialMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpecialMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>keydo_SystemSet</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, menu.o(i.keydo_SystemSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keydo_SystemSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>keydo_TaskManagerMenu</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, menu.o(i.keydo_TaskManagerMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keydo_TaskManagerMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>keydo_TaskView</STRONG> (Thumb, 514 bytes, Stack size 40 bytes, menu.o(i.keydo_TaskView))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = keydo_TaskView &rArr; dspInputNum &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayCount
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumInputProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>keydo_TaskViewList</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, menu.o(i.keydo_TaskViewList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = keydo_TaskViewList
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>keydo_TimeSet</STRONG> (Thumb, 840 bytes, Stack size 48 bytes, menu.o(i.keydo_TimeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = keydo_TimeSet &rArr; dspInputNum &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyDateOfWeek
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayCount
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_SetDateTime
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumInputProc
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TimeIsValid
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DateIsValid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>keydo_YkTask</STRONG> (Thumb, 834 bytes, Stack size 48 bytes, menu.o(i.keydo_YkTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = keydo_YkTask &rArr; dspInputNum &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgNew
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetCount
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetAt
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgDeleteIndex
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgCanAddNew
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtSetTaskFuncValue
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtInit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskType
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskFuncValue
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtAssign
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumInputProc
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.constdata)
</UL>
<P><STRONG><a name="[1e2]"></a>lcmDelay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcm19264.o(i.lcmDelay))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wtcom
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcmWriteData
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdR
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdM
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdL
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Locatexy
</UL>

<P><STRONG><a name="[2f3]"></a>lcmWriteData</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lcm19264.o(i.lcmWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcmWriteData &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wtcom
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcmDelay
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCM_SET_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_UpdateLCMData
</UL>

<P><STRONG><a name="[15a]"></a>lcm_BackLightCtrl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcm19264.o(i.lcm_BackLightCtrl))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTaskGroup
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackLightDo
</UL>

<P><STRONG><a name="[292]"></a>lcm_Clr</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, lcm19264.o(i.lcm_Clr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcm_Clr &rArr; fill_lcm_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_lcm_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspYkTask
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTimeSet
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskView
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskManagerMenu
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSystemSet
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialMode
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialJobEdit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewUSB
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewMenu
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewMem
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPortEdit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPortCtrl
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayYj
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayUSB
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTuner
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayPhone
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayMem
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayBj
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayAUX
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPhoneTask
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPasswordSet
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPasswordInput
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMainMenu
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobTunerSet
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobSongSet
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspIntercutTask
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspGroupList
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspBjSet
</UL>

<P><STRONG><a name="[2b1]"></a>lcm_ClrLine</STRONG> (Thumb, 114 bytes, Stack size 36 bytes, lcm19264.o(i.lcm_ClrLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lcm_ClrLine
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rddata
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ClrClient
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
</UL>

<P><STRONG><a name="[2f6]"></a>lcm_Configuration</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lcm19264.o(i.lcm_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcm_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Init
</UL>

<P><STRONG><a name="[2f7]"></a>lcm_DisplayOpen</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcm19264.o(i.lcm_DisplayOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lcm_DisplayOpen &rArr; WrcmdR &rArr; LcdBusyR &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdR
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdM
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdL
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Init
</UL>

<P><STRONG><a name="[1fa]"></a>lcm_DrawBmp</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, lcm19264.o(i.lcm_DrawBmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rddata
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putedot
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putcdot
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Putedot32
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_PutPlayerdot
</UL>

<P><STRONG><a name="[166]"></a>lcm_Init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcm19264.o(i.lcm_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lcm_Init &rArr; lcm_UpdateLCMData &rArr; Locatexy &rArr; LcdBusyR &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_DisplayOpen
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Configuration
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_lcm_buffer
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdR
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdM
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrcmdL
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_UpdateLCMData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_BackLightCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipOutHalInit
</UL>

<P><STRONG><a name="[296]"></a>lcm_Linexy</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, lcm19264.o(i.lcm_Linexy))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lcm_Linexy &rArr; lcm_Point
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Point
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialJobEdit
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawRect
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktop
</UL>

<P><STRONG><a name="[2f8]"></a>lcm_Point</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lcm19264.o(i.lcm_Point))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcm_Point
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rddata
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Linexy
</UL>

<P><STRONG><a name="[2ae]"></a>lcm_PutPlayerdot</STRONG> (Thumb, 44 bytes, Stack size 28 bytes, lcm19264.o(i.lcm_PutPlayerdot))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = lcm_PutPlayerdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_DrawBmp
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTunerSingle
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayerState
</UL>

<P><STRONG><a name="[2f9]"></a>lcm_Putcdot</STRONG> (Thumb, 60 bytes, Stack size 36 bytes, lcm19264.o(i.lcm_Putcdot))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_DrawBmp
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>

<P><STRONG><a name="[2fa]"></a>lcm_Putedot</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, lcm19264.o(i.lcm_Putedot))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcm_Putedot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_DrawBmp
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
</UL>

<P><STRONG><a name="[144]"></a>lcm_Putstr</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, lcm19264.o(i.lcm_Putstr))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putedot
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putcdot
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_RollShowStr
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspYkTask
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspWelcome
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspUSBDiskStatus
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTunerFreq
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTimeSet
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTime
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskView
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskManagerMenu
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSystemSet
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSysDate
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialMode
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialJobEdit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongViewMenu
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPortEdit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPortCtrl
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayYj
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTuner
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTime
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayBj
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPhoneTask
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPasswordSet
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPasswordInput
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMemoryStatus
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspManualFrame
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMainMenu
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobTunerSet
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEndTime
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspIntercutTask
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspGroupList
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspFMFreqInputNum
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDrawTitle
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspChannel
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspBjSet
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspAmplifierState
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoRemoteTaskDo
</UL>

<P><STRONG><a name="[2b0]"></a>lcm_Putstr32</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, lcm19264.o(i.lcm_Putstr32))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = lcm_Putstr32 &rArr; Putedot32 &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdot24index
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Putedot32
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSysTime
</UL>

<P><STRONG><a name="[2fc]"></a>lcm_RollShowStr</STRONG> (Thumb, 306 bytes, Stack size 328 bytes, lcm19264.o(i.lcm_RollShowStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = lcm_RollShowStr &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Putstr
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_curSongName
</UL>

<P><STRONG><a name="[2b5]"></a>lcm_UpdateLCMData</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, lcm19264.o(i.lcm_UpdateLCMData))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lcm_UpdateLCMData &rArr; Locatexy &rArr; LcdBusyR &rArr; wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcmWriteData
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Locatexy
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Init
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspWelcome
</UL>

<P><STRONG><a name="[370]"></a>lcm_dat_in</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcm19264.o(i.lcm_dat_in))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wtcom
</UL>

<P><STRONG><a name="[36f]"></a>lcm_dat_out</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcm19264.o(i.lcm_dat_out))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wtcom
</UL>

<P><STRONG><a name="[2fd]"></a>mSavePhoneTaskFromFile</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, task.o(i.mSavePhoneTaskFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = mSavePhoneTaskFromFile &rArr; tmSaveJobToFile &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobToFile
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetCount
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetAt
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskJob
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveToFile
</UL>

<P><STRONG><a name="[300]"></a>mSaveYkTaskFromFile</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, task.o(i.mSaveYkTaskFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = mSaveYkTaskFromFile &rArr; tmSaveJobToFile &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobToFile
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetCount
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetAt
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskJob
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveToFile
</UL>

<P><STRONG><a name="[d8]"></a>main</STRONG> (Thumb, 312 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 2272 + Unknown Stack Size
<LI>Call Chain = main &rArr; menu_OnTimer &rArr; AutoRemoteTaskDo &rArr; openRemoteTaskGroup &rArr; openRemoteTask &rArr; tuner_setBand &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Start
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyDo
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_Clr
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_getKey
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_IslongPress
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutStr
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_Init
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipOutHalInit
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChipHalInit
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoAmpRun
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alarm_key
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KMG_Init
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[29b]"></a>menu_ClrClient</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu.o(i.menu_ClrClient))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = menu_ClrClient &rArr; lcm_ClrLine
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_ClrLine
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_UDiskInsert
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspUSBDiskStatus
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMemoryStatus
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
</UL>

<P><STRONG><a name="[302]"></a>menu_Init</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, menu.o(i.menu_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472 + Unknown Stack Size
<LI>Call Chain = menu_Init &rArr; SDChangeDo &rArr; tmLoadFromFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Init
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setMute
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_LoadParam
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_Init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmInit
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyDateOfWeek
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_Config
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_Init
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_Init
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_Init
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Init
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_Init
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_TimerQueueInit
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspWelcome
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemParam
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SineTest
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[306]"></a>menu_KeyDo</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, menu.o(i.menu_KeyDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 2216 + Unknown Stack Size
<LI>Call Chain = menu_KeyDo &rArr; menu_KeyPress &rArr; tuner_SearchStop &rArr; tuner_setCurrentFreq &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyRelease
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[312]"></a>menu_KeyPress</STRONG> (Thumb, 360 bytes, Stack size 16 bytes, menu.o(i.menu_KeyPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 2200 + Unknown Stack Size
<LI>Call Chain = menu_KeyPress &rArr; tuner_SearchStop &rArr; tuner_setCurrentFreq &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayMemBj
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchStop
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_IsSearching
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_BackLightCtrl
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetBjPortState
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_AmpPowerOpen
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_StopPlay
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Repaint
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_Default
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayYj
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayBj
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktop
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyDo
</UL>

<P><STRONG><a name="[313]"></a>menu_KeyRelease</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, menu.o(i.menu_KeyRelease))
<BR><BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyDo
</UL>

<P><STRONG><a name="[304]"></a>menu_OnTimer</STRONG> (Thumb, 252 bytes, Stack size 8 bytes, menu.o(i.menu_OnTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 2272 + Unknown Stack Size
<LI>Call Chain = menu_OnTimer &rArr; AutoRemoteTaskDo &rArr; openRemoteTaskGroup &rArr; openRemoteTask &rArr; tuner_setBand &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchDo
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_GetDate
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_do
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_UpdateLCMData
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysTime
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_UpdateTodayTask
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTunerFreq
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSysTime
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSysDate
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoRemoteTaskDo
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBChangeDo
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStatus
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayerDO
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MicphonePrioriDo
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JobRunCounterDo
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackLightDo
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[317]"></a>menu_Repaint</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, menu.o(i.menu_Repaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = menu_Repaint
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
</UL>

<P><STRONG><a name="[303]"></a>menu_Start</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, menu.o(i.menu_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = menu_Start &rArr; dspDesktop &rArr; dspDesktopTask &rArr; GetDesktopSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktop
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[142]"></a>menu_StopPlay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, menu.o(i.menu_StopPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = menu_StopPlay &rArr; player_Stop &rArr; _stopPlay &rArr; f_close &rArr; f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTaskGroup
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayMem
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayBj
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_Desktop
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMainMenu
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoRemoteTaskDo
</UL>

<P><STRONG><a name="[311]"></a>menu_TimerQueueInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menu.o(i.menu_TimerQueueInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = menu_TimerQueueInit &rArr; add_queue
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[241]"></a>menu_UDiskInsert</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, menu.o(i.menu_UDiskInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488<LI>Call Chain = menu_UDiskInsert &rArr; player_PlayUSB &rArr; _playusbsong &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayUSB
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUSBPlayPosition
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ClrClient
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBChangeDo
</UL>

<P><STRONG><a name="[20b]"></a>menu_UpdateTodayTask</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, menu.o(i.menu_UpdateTodayTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = menu_UpdateTodayTask &rArr; tmUpdateTodayTask &rArr; tmGetTodayTaskGroup &rArr; tmIsSpecialDate &rArr; smValidDate &rArr; MyDateOfDays &rArr; DateOfDays
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttUpdateTaskState
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmUpdateTodayTask
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktop
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
</UL>

<P><STRONG><a name="[31d]"></a>meter_Configer</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ampmeter.o(i.meter_Configer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = meter_Configer &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_Init
</UL>

<P><STRONG><a name="[308]"></a>meter_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ampmeter.o(i.meter_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = meter_Init &rArr; meter_Configer &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_SetData
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_Configer
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[31e]"></a>meter_SetData</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, ampmeter.o(i.meter_SetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = meter_SetData
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_Init
</UL>

<P><STRONG><a name="[31f]"></a>mp3_GetDuration</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, mpegaudio.o(i.mp3_GetDuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mp3_GetDuration
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSampleRate
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBitRate
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFSFile
</UL>

<P><STRONG><a name="[320]"></a>mp3_ReadFromFSFile</STRONG> (Thumb, 258 bytes, Stack size 3488 bytes, mpegaudio.o(i.mp3_ReadFromFSFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 3976<LI>Call Chain = mp3_ReadFromFSFile &rArr; ID3v2_ReadFromFile &rArr; ReadHeader &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v2_ReadFromFile
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID3v1_ReadFromFile
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_GetDuration
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindFrame
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FResetData
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFile
</UL>

<P><STRONG><a name="[193]"></a>mp3_ReadFromFile</STRONG> (Thumb, 52 bytes, Stack size 568 bytes, mpegaudio.o(i.mp3_ReadFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4544<LI>Call Chain = mp3_ReadFromFile &rArr; mp3_ReadFromFSFile &rArr; ID3v2_ReadFromFile &rArr; ReadHeader &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3_ReadFromFSFile
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAudioLength
</UL>

<P><STRONG><a name="[285]"></a>msd_disk_initialize</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, msd.o(i.msd_disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = msd_disk_initialize &rArr; SD_Init &rArr; SD_SendCommand_NoDeassert
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[288]"></a>msd_disk_ioctl</STRONG> (Thumb, 334 bytes, Stack size 40 bytes, msd.o(i.msd_disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = msd_disk_ioctl &rArr; SD_GetCapacity &rArr; SD_GetCSD &rArr; SD_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ReadWriteByte
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReady
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCapacity
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCID
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_Release
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[28a]"></a>msd_disk_read</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, msd.o(i.msd_disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = msd_disk_read &rArr; SD_ReadMultiBlock &rArr; SD_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[28c]"></a>msd_disk_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, msd.o(i.msd_disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>

<P><STRONG><a name="[28f]"></a>msd_disk_write</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, msd.o(i.msd_disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = msd_disk_write &rArr; SD_WriteMultiBlock &rArr; SD_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[321]"></a>next_song</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, player.o(i.next_song))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464<LI>Call Chain = next_song &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Play
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stopPlay
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUSBPlayPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Prev
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Next
</UL>

<P><STRONG><a name="[322]"></a>openRemoteTask</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, menu.o(i.openRemoteTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 2208<LI>Call Chain = openRemoteTask &rArr; tuner_setBand &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_getState
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Play
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Pause
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_AutoPlayUSB
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_AutoPlayMem
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setFreq
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setBand
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTunerFreq
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTunerBand
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetSourceType
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetSongID
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetPlayLength
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtAssign
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_getSource
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_AmpPowerOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTaskGroup
</UL>

<P><STRONG><a name="[13f]"></a>openRemoteTaskGroup</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, menu.o(i.openRemoteTaskGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 2232<LI>Call Chain = openRemoteTaskGroup &rArr; openRemoteTask &rArr; tuner_setBand &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetCount
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetAt
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_BackLightCtrl
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_AmpPowerOpen
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_StopPlay
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoRemoteTaskDo
</UL>

<P><STRONG><a name="[152]"></a>player_AutoPlayMem</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, player.o(i.player_AutoPlayMem))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = player_AutoPlayMem &rArr; _playmemsong &rArr; player_OpenFile &rArr; FindSongIndex &rArr; sd_FindSongIndex &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playmemsong
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[153]"></a>player_AutoPlayUSB</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, player.o(i.player_AutoPlayUSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480<LI>Call Chain = player_AutoPlayUSB &rArr; _playusbsong &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playusbsong
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUSBPlayPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[20d]"></a>player_GetCurDevice</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, player.o(i.player_GetCurDevice))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBChangeDo
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
</UL>

<P><STRONG><a name="[30c]"></a>player_Init</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, player.o(i.player_Init))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[1f3]"></a>player_Next</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, player.o(i.player_Next))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = player_Next &rArr; next_song &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_song
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayMem
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayerDO
</UL>

<P><STRONG><a name="[252]"></a>player_OpenFile</STRONG> (Thumb, 252 bytes, Stack size 80 bytes, player.o(i.player_OpenFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176<LI>Call Chain = player_OpenFile &rArr; FindSongIndex &rArr; sd_FindSongIndex &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SoftReset
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SetVolume
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_ReadData
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stopPlay
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongno
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtractFileName
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongIndex
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_song
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playusbsong
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playmemsong
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayMem
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayBj
</UL>

<P><STRONG><a name="[2e9]"></a>player_Pause</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, player.o(i.player_Pause))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = player_Pause &rArr; audio_setSourceMute &rArr; _setSource
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSourceMute
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayMem
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayBj
</UL>

<P><STRONG><a name="[253]"></a>player_Play</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, player.o(i.player_Play))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = player_Play &rArr; audio_setSourceMute &rArr; _setSource
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSourceMute
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_song
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playusbsong
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playmemsong
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayMem
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayBj
</UL>

<P><STRONG><a name="[1f1]"></a>player_PlayDo</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, player.o(i.player_PlayDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = player_PlayDo &rArr; player_ReadData &rArr; _stopPlay &rArr; f_close &rArr; f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_WriteData
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_ReadData
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stopPlay
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayerDO
</UL>

<P><STRONG><a name="[20c]"></a>player_PlayMem</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, player.o(i.player_PlayMem))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = player_PlayMem &rArr; _playmemsong &rArr; player_OpenFile &rArr; FindSongIndex &rArr; sd_FindSongIndex &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playmemsong
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayMem
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
</UL>

<P><STRONG><a name="[314]"></a>player_PlayMemBj</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, player.o(i.player_PlayMemBj))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = player_PlayMemBj &rArr; _playmemsong &rArr; player_OpenFile &rArr; FindSongIndex &rArr; sd_FindSongIndex &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playmemsong
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
</UL>

<P><STRONG><a name="[2ad]"></a>player_PlayUSB</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, player.o(i.player_PlayUSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480<LI>Call Chain = player_PlayUSB &rArr; _playusbsong &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playusbsong
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_UDiskInsert
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayUSB
</UL>

<P><STRONG><a name="[2ea]"></a>player_Prev</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, player.o(i.player_Prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = player_Prev &rArr; next_song &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_song
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayMem
</UL>

<P><STRONG><a name="[324]"></a>player_ReadData</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, player.o(i.player_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = player_ReadData &rArr; _stopPlay &rArr; f_close &rArr; f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stopPlay
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayDo
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
</UL>

<P><STRONG><a name="[20e]"></a>player_RemoveSongDir</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, player.o(i.player_RemoveSongDir))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBChangeDo
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
</UL>

<P><STRONG><a name="[156]"></a>player_Stop</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, player.o(i.player_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = player_Stop &rArr; _stopPlay &rArr; f_close &rArr; f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stopPlay
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_song
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_StopPlay
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayMem
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayBj
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PasswordInput
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayUSB
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayMem
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBChangeDo
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayerDO
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JobRunCounterDo
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[251]"></a>player_UpdateSongDir</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, player.o(i.player_UpdateSongDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = player_UpdateSongDir &rArr; GetDirectoryInfo &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDirectoryInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playusbsong
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playmemsong
</UL>

<P><STRONG><a name="[1f2]"></a>player_getState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, player.o(i.player_getState))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayUSB
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayMem
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayBj
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayerState
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayerDO
</UL>

<P><STRONG><a name="[272]"></a>put_fat</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[31a]"></a>queue_do</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, queue.o(i.queue_do))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = queue_do
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[255]"></a>random</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, player.o(i.random))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = random &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_playusbsong
</UL>

<P><STRONG><a name="[264]"></a>rd_usb_data</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, ch375.o(i.rd_usb_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_ReadSec
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetDiskSize
</UL>

<P><STRONG><a name="[16e]"></a>remove_queue</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, queue.o(i.remove_queue))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = remove_queue
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>

<P><STRONG><a name="[1c3]"></a>rtAssign</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, task.o(i.rtAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rtAssign &rArr; tjAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskJob
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitYkTask
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhoneTask
</UL>

<P><STRONG><a name="[2aa]"></a>rtGetTaskFuncValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.rtGetTaskFuncValue))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspYkTask
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPhoneTask
</UL>

<P><STRONG><a name="[2fe]"></a>rtGetTaskJob</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, task.o(i.rtGetTaskJob))
<BR><BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadYkTaskFromFile
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadPhoneTaskFromFile
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtAssign
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSaveYkTaskFromFile
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSavePhoneTaskFromFile
</UL>

<P><STRONG><a name="[32c]"></a>rtGetTaskKey</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.rtGetTaskKey))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgCompareDate
</UL>

<P><STRONG><a name="[2a9]"></a>rtGetTaskType</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, task.o(i.rtGetTaskType))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspYkTask
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPhoneTask
</UL>

<P><STRONG><a name="[1c4]"></a>rtInit</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, task.o(i.rtInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rtInit &rArr; tjInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitYkTask
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhoneTask
</UL>

<P><STRONG><a name="[2e5]"></a>rtSetTaskFuncValue</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.rtSetTaskFuncValue))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
</UL>

<P><STRONG><a name="[1e8]"></a>rtc_GetDate</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ds3231.o(i.rtc_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rtc_GetDate &rArr; I2CReadByte &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadByte
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD2HEX
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_addDate
</UL>

<P><STRONG><a name="[297]"></a>rtc_GetDateTime</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, ds3231.o(i.rtc_GetDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rtc_GetDateTime &rArr; I2CReadByte &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadByte
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD2HEX
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktop
</UL>

<P><STRONG><a name="[1a7]"></a>rtc_GetTime</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ds3231.o(i.rtc_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rtc_GetTime &rArr; I2CReadByte &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadByte
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD2HEX
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysTime
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_addDate
</UL>

<P><STRONG><a name="[30f]"></a>rtc_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ds3231.o(i.rtc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = rtc_Init &rArr; rtc_SetDateTime &rArr; I2CWriteByte &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_SetDateTime
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteByte
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[2f2]"></a>rtc_SetDateTime</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, ds3231.o(i.rtc_SetDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rtc_SetDateTime &rArr; I2CWriteByte &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteByte
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEX2BCD
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TimeSet
</UL>

<P><STRONG><a name="[2e6]"></a>rtgCanAddNew</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, task.o(i.rtgCanAddNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rtgCanAddNew
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgGetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgNew
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
</UL>

<P><STRONG><a name="[32b]"></a>rtgClear</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, task.o(i.rtgClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtgClear
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alClear
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmResetTaskData
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadYkTaskFromFile
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadPhoneTaskFromFile
</UL>

<P><STRONG><a name="[51]"></a>rtgCompareDate</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, task.o(i.rtgCompareDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rtgCompareDate
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskKey
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(i.rtgInit)
</UL>
<P><STRONG><a name="[2e8]"></a>rtgDeleteIndex</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, task.o(i.rtgDeleteIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtgDeleteIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alRemoveIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
</UL>

<P><STRONG><a name="[1c2]"></a>rtgGetAt</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, task.o(i.rtgGetAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtgGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alGetElement
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSaveYkTaskFromFile
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSavePhoneTaskFromFile
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTaskGroup
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitYkTask
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhoneTask
</UL>

<P><STRONG><a name="[1c1]"></a>rtgGetCount</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, task.o(i.rtgGetCount))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgCanAddNew
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSaveYkTaskFromFile
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSavePhoneTaskFromFile
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTaskGroup
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspYkTask
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPhoneTask
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitYkTask
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhoneTask
</UL>

<P><STRONG><a name="[32d]"></a>rtgInit</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, task.o(i.rtgInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtgInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alInit
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmInit
</UL>

<P><STRONG><a name="[2e7]"></a>rtgNew</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, task.o(i.rtgNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rtgNew &rArr; alAddElement
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alAddElement
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgCanAddNew
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadYkTaskFromFile
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadPhoneTaskFromFile
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_YkTask
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PhoneTask
</UL>

<P><STRONG><a name="[309]"></a>sd_Config</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, msd.o(i.sd_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sd_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[188]"></a>sd_FindSongIndex</STRONG> (Thumb, 278 bytes, Stack size 232 bytes, player.o(i.sd_FindSongIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = sd_FindSongIndex &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSongFile
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSongIndex
</UL>

<P><STRONG><a name="[207]"></a>sd_IsInserted</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, msd.o(i.sd_IsInserted))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sd_IsInserted
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
</UL>

<P><STRONG><a name="[209]"></a>sd_IsValid</STRONG> (Thumb, 24 bytes, Stack size 40 bytes, menu.o(i.sd_IsValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = sd_IsValid &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
</UL>

<P><STRONG><a name="[218]"></a>sd_ReadWriteByte</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, msd.o(i.sd_ReadWriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlock
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReady
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand_NoDeassert
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlock
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SPI_Release
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_ioctl
</UL>

<P><STRONG><a name="[217]"></a>sd_spi_SetSpeed</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, msd.o(i.sd_spi_SetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlock
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlock
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[4f]"></a>show_curSongName</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, menu.o(i.show_curSongName))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = show_curSongName &rArr; lcm_RollShowStr &rArr; lcm_Putstr &rArr; lcm_Putcdot &rArr; lcm_DrawBmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_RollShowStr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.DspSongName)
</UL>
<P><STRONG><a name="[204]"></a>si47xx_Configuration</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, si47xx.o(i.si47xx_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = si47xx_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSi47XX_2w
</UL>

<P><STRONG><a name="[34f]"></a>smInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, task.o(i.smInit))
<BR><BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmInit
</UL>

<P><STRONG><a name="[332]"></a>smValidDate</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, task.o(i.smValidDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = smValidDate &rArr; MyDateOfDays &rArr; DateOfDays
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyDateOfDays
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmIsSpecialDate
</UL>

<P><STRONG><a name="[197]"></a>strfmt</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, hal.o(i.strfmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getFreqString
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspYkTask
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTimeSet
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTime
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskView
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSysTime
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSysDate
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialMode
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialJobEdit
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSongNumView
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTuner
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTime
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPhoneTask
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEndTime
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspIntercutTask
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspInputNum
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspGroupList
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspFMFreqInputNum
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspChannel
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
</UL>

<P><STRONG><a name="[1bc]"></a>tgAssign</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, task.o(i.tgAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tgAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetHeadBufferSize
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetHeadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_GroupList
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGroupList
</UL>

<P><STRONG><a name="[33a]"></a>tgGetEndDate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tgGetEndDate))
<BR><BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgValidDate
</UL>

<P><STRONG><a name="[334]"></a>tgGetHeadBuffer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, task.o(i.tgGetHeadBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveTaskGroupToFile
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadTaskGroupFromFile
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgInit
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgAssign
</UL>

<P><STRONG><a name="[333]"></a>tgGetHeadBufferSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.tgGetHeadBufferSize))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveTaskGroupToFile
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadTaskGroupFromFile
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgInit
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgAssign
</UL>

<P><STRONG><a name="[338]"></a>tgGetStartDate</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, task.o(i.tgGetStartDate))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglCompareDate
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgValidDate
</UL>

<P><STRONG><a name="[2d1]"></a>tgInit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, task.o(i.tgInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = tgInit
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgSetStartDate
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgSetEndDate
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetHeadBufferSize
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetHeadBuffer
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_GroupList
</UL>

<P><STRONG><a name="[336]"></a>tgSetEndDate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tgSetEndDate))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgInit
</UL>

<P><STRONG><a name="[335]"></a>tgSetStartDate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tgSetStartDate))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgInit
</UL>

<P><STRONG><a name="[337]"></a>tgValidDate</STRONG> (Thumb, 62 bytes, Stack size 28 bytes, task.o(i.tgValidDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = tgValidDate
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetStartDate
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetEndDate
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortDateOfDays
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetTaskGroup
</UL>

<P><STRONG><a name="[2d0]"></a>tglCanAddNew</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, task.o(i.tglCanAddNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tglCanAddNew
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglNew
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_GroupList
</UL>

<P><STRONG><a name="[33b]"></a>tglClear</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, task.o(i.tglClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tglClear
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alClear
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmResetTaskData
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadTaskGroupsFromFile
</UL>

<P><STRONG><a name="[52]"></a>tglCompareDate</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, task.o(i.tglCompareDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tglCompareDate
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetStartDate
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortDateOfDays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(i.tglInit)
</UL>
<P><STRONG><a name="[2d3]"></a>tglDeleteIndex</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, task.o(i.tglDeleteIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tglDeleteIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alRemoveIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_GroupList
</UL>

<P><STRONG><a name="[1bb]"></a>tglGetAt</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, task.o(i.tglGetAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tglGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alGetElement
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveTaskGroupsToFile
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetTaskGroup
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_GroupList
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGroupList
</UL>

<P><STRONG><a name="[1ba]"></a>tglGetCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, task.o(i.tglGetCount))
<BR><BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveTaskGroupsToFile
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetTaskGroup
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglCanAddNew
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_GroupList
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspGroupList
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGroupList
</UL>

<P><STRONG><a name="[33c]"></a>tglGetTaskGroup</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, task.o(i.tglGetTaskGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = tglGetTaskGroup &rArr; tgValidDate
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetCount
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetAt
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgValidDate
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
</UL>

<P><STRONG><a name="[33d]"></a>tglInit</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, task.o(i.tglInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tglInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alInit
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmInit
</UL>

<P><STRONG><a name="[2d2]"></a>tglNew</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, task.o(i.tglNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tglNew &rArr; alAddElement
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alAddElement
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglCanAddNew
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadTaskGroupsFromFile
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_GroupList
</UL>

<P><STRONG><a name="[1b9]"></a>tjAssign</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, task.o(i.tjAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tjAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBufferSize
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBuffer
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgAssign
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtAssign
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itAssign
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_BjSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpecialJobEdit
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBjSet
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_loadJobParam
</UL>

<P><STRONG><a name="[24c]"></a>tjGetEndTime</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, task.o(i.tjGetEndTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = tjGetEndTime &rArr; MyTimeAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NewJobParam
</UL>

<P><STRONG><a name="[2dc]"></a>tjGetHeadBuffer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, task.o(i.tjGetHeadBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobToFile
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobFromFile
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
</UL>

<P><STRONG><a name="[2db]"></a>tjGetHeadBufferSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.tjGetHeadBufferSize))
<BR><BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobToFile
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobFromFile
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
</UL>

<P><STRONG><a name="[154]"></a>tjGetPlayLength</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tjGetPlayLength))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttTaskState
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetNewTaskStartTime
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobSongSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpecialJobEdit
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_loadJobParam
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[151]"></a>tjGetSongID</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tjGetSongID))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitJobSongSet
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[14c]"></a>tjGetSourceType</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tjGetSourceType))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[167]"></a>tjGetStartTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tjGetStartTime))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttUpdateTaskState
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttTaskState
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetNewTaskStartTime
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgCompareStartTime
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobSongSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpecialJobEdit
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAmpPower
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_loadJobParam
</UL>

<P><STRONG><a name="[343]"></a>tjGetTimeType</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tjGetTimeType))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgCompareStartTime
</UL>

<P><STRONG><a name="[14d]"></a>tjGetTunerBand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tjGetTunerBand))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitJobTunerSet
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[14f]"></a>tjGetTunerFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tjGetTunerFreq))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitJobTunerSet
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[1dc]"></a>tjInit</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, task.o(i.tjInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tjInit
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetVolume
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetSourceType
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetSongType
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetSongID
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetRandomMode
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBufferSize
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBuffer
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtInit
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itInit
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadSystemParam
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitJobParam
</UL>

<P><STRONG><a name="[2d9]"></a>tjSetPlayLength</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.tjSetPlayLength))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobSongSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
</UL>

<P><STRONG><a name="[33f]"></a>tjSetRandomMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, task.o(i.tjSetRandomMode))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
</UL>

<P><STRONG><a name="[2d7]"></a>tjSetSongID</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.tjSetSongID))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobSongSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
</UL>

<P><STRONG><a name="[2d6]"></a>tjSetSongType</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.tjSetSongType))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
</UL>

<P><STRONG><a name="[2a0]"></a>tjSetSourceType</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.tjSetSourceType))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
</UL>

<P><STRONG><a name="[24b]"></a>tjSetStartMyTime</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, task.o(i.tjSetStartMyTime))
<BR><BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NewJobParam
</UL>

<P><STRONG><a name="[2a2]"></a>tjSetTunerBand</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.tjSetTunerBand))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
</UL>

<P><STRONG><a name="[2a4]"></a>tjSetTunerFreq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.tjSetTunerFreq))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
</UL>

<P><STRONG><a name="[33e]"></a>tjSetVolume</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, task.o(i.tjSetVolume))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
</UL>

<P><STRONG><a name="[340]"></a>tjgAssign</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, task.o(i.tjgAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tjgAssign &rArr; tjgNew &rArr; alAddElement
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alClear
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgNew
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetAt
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
</UL>

<P><STRONG><a name="[341]"></a>tjgCanAddNew</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, task.o(i.tjgCanAddNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tjgCanAddNew
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgNew
</UL>

<P><STRONG><a name="[342]"></a>tjgClear</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, task.o(i.tjgClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tjgClear
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alClear
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttClear
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
</UL>

<P><STRONG><a name="[53]"></a>tjgCompareStartTime</STRONG> (Thumb, 98 bytes, Stack size 28 bytes, task.o(i.tjgCompareStartTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = tjgCompareStartTime
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTimeType
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeToSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(i.tjgInit)
</UL>
<P><STRONG><a name="[2dd]"></a>tjgDeleteIndex</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, task.o(i.tjgDeleteIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tjgDeleteIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alRemoveIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
</UL>

<P><STRONG><a name="[29f]"></a>tjgGetAt</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, task.o(i.tjgGetAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tjgGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alGetElement
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttUpdateTaskState
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttTaskState
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetNextTask
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobTaskToFile
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetNewTaskStartTime
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgAssign
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
</UL>

<P><STRONG><a name="[29a]"></a>tjgGetCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, task.o(i.tjgGetCount))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetCount
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobTaskToFile
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgNew
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetNewTaskStartTime
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgCanAddNew
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TaskViewList
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTaskViewList
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
</UL>

<P><STRONG><a name="[348]"></a>tjgGetIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tjgGetIndex))
<BR><BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobTaskToFile
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetJobGroup
</UL>

<P><STRONG><a name="[24a]"></a>tjgGetNewTaskStartTime</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, task.o(i.tjgGetNewTaskStartTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tjgGetNewTaskStartTime &rArr; tjgGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetCount
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetAt
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetPlayLength
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondToMyTime
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeToSecond
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NewJobParam
</UL>

<P><STRONG><a name="[1c6]"></a>tjgInit</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, task.o(i.tjgInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tjgInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alInit
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttInit
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglInit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTaskViewList
</UL>

<P><STRONG><a name="[2da]"></a>tjgNew</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, task.o(i.tjgNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tjgNew &rArr; alAddElement
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alAddElement
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetCount
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgCanAddNew
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobTaskFromFile
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgAssign
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
</UL>

<P><STRONG><a name="[34a]"></a>tjgSetIndex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, task.o(i.tjgSetIndex))
<BR><BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobTaskFromFile
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglInit
</UL>

<P><STRONG><a name="[344]"></a>tjgSort</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, task.o(i.tjgSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tjgSort &rArr; alSort
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alSort
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobTaskToFile
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
</UL>

<P><STRONG><a name="[346]"></a>tjglClear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, task.o(i.tjglClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tjglClear
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alClear
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmResetTaskData
</UL>

<P><STRONG><a name="[54]"></a>tjglCompare</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task.o(i.tjglCompare))
<BR>[Address Reference Count : 1]<UL><LI> task.o(i.tjglInit)
</UL>
<P><STRONG><a name="[249]"></a>tjglGetAt</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, task.o(i.tjglGetAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tjglGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alGetElement
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobTaskToFile
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetJobGroup
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NewJobParam
</UL>

<P><STRONG><a name="[2d5]"></a>tjglGetCount</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, task.o(i.tjglGetCount))
<BR><BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobTaskToFile
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetJobGroup
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
</UL>

<P><STRONG><a name="[347]"></a>tjglGetJobGroup</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, task.o(i.tjglGetJobGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tjglGetJobGroup &rArr; tjglGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetCount
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetAt
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobTaskFromFile
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetSpecialGroup
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetGroupOfDate
</UL>

<P><STRONG><a name="[349]"></a>tjglInit</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, task.o(i.tjglInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tjglInit &rArr; tjgInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alInit
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alAddElement
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgSetIndex
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgInit
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmResetTaskData
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmInit
</UL>

<P><STRONG><a name="[34b]"></a>tmGetGroupOfDate</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, task.o(i.tmGetGroupOfDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = tmGetGroupOfDate &rArr; tjglGetJobGroup &rArr; tjglGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetJobGroup
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyDateOfWeek
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
</UL>

<P><STRONG><a name="[34c]"></a>tmGetSpecialGroup</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, task.o(i.tmGetSpecialGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tmGetSpecialGroup &rArr; tjglGetJobGroup &rArr; tjglGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetJobGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
</UL>

<P><STRONG><a name="[1c7]"></a>tmGetTodayTaskGroup</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, task.o(i.tmGetTodayTaskGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tmGetTodayTaskGroup &rArr; tmIsSpecialDate &rArr; smValidDate &rArr; MyDateOfDays &rArr; DateOfDays
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmIsSpecialDate
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetSpecialGroup
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetGroupOfDate
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgSort
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgNew
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgClear
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgAssign
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetTaskGroup
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetCount
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetAt
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itValidDate
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetTaskJob
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmUpdateTodayTask
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTaskViewList
</UL>

<P><STRONG><a name="[310]"></a>tmInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, task.o(i.tmInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tmInit &rArr; tjglInit &rArr; tjgInit
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttInit
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglInit
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglInit
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smInit
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgInit
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgInit
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[34d]"></a>tmIsSpecialDate</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, task.o(i.tmIsSpecialDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tmIsSpecialDate &rArr; smValidDate &rArr; MyDateOfDays &rArr; DateOfDays
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smValidDate
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
</UL>

<P><STRONG><a name="[20a]"></a>tmLoadFromFile</STRONG> (Thumb, 100 bytes, Stack size 568 bytes, task.o(i.tmLoadFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456<LI>Call Chain = tmLoadFromFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadYkTaskFromFile
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadTaskGroupsFromFile
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadSpecModeFromFile
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadPhoneTaskFromFile
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobTaskFromFile
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadIntercutTaskFromFile
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadHeaderFromFile
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
</UL>

<P><STRONG><a name="[350]"></a>tmLoadHeaderFromFile</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, task.o(i.tmLoadHeaderFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = tmLoadHeaderFromFile &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadFromFile
</UL>

<P><STRONG><a name="[353]"></a>tmLoadIntercutTaskFromFile</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, task.o(i.tmLoadIntercutTaskFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = tmLoadIntercutTaskFromFile &rArr; tmLoadJobFromFile &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobFromFile
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgNew
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgClear
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetTaskJob
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetDateBufferSize
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetDateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadFromFile
</UL>

<P><STRONG><a name="[359]"></a>tmLoadJobFromFile</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, task.o(i.tmLoadJobFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = tmLoadJobFromFile &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBufferSize
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadYkTaskFromFile
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadPhoneTaskFromFile
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobTaskFromFile
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadIntercutTaskFromFile
</UL>

<P><STRONG><a name="[351]"></a>tmLoadJobTaskFromFile</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, task.o(i.tmLoadJobTaskFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = tmLoadJobTaskFromFile &rArr; tmLoadJobFromFile &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobFromFile
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetJobGroup
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgSetIndex
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgNew
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadFromFile
</UL>

<P><STRONG><a name="[355]"></a>tmLoadPhoneTaskFromFile</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, task.o(i.tmLoadPhoneTaskFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = tmLoadPhoneTaskFromFile &rArr; tmLoadJobFromFile &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobFromFile
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgNew
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgClear
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskJob
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadFromFile
</UL>

<P><STRONG><a name="[356]"></a>tmLoadSpecModeFromFile</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, task.o(i.tmLoadSpecModeFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = tmLoadSpecModeFromFile &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadFromFile
</UL>

<P><STRONG><a name="[35a]"></a>tmLoadTaskGroupFromFile</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, task.o(i.tmLoadTaskGroupFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = tmLoadTaskGroupFromFile &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetHeadBufferSize
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetHeadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadTaskGroupsFromFile
</UL>

<P><STRONG><a name="[352]"></a>tmLoadTaskGroupsFromFile</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, task.o(i.tmLoadTaskGroupsFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = tmLoadTaskGroupsFromFile &rArr; tmLoadTaskGroupFromFile &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadTaskGroupFromFile
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglNew
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglClear
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadFromFile
</UL>

<P><STRONG><a name="[354]"></a>tmLoadYkTaskFromFile</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, task.o(i.tmLoadYkTaskFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = tmLoadYkTaskFromFile &rArr; tmLoadJobFromFile &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadJobFromFile
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgNew
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgClear
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtGetTaskJob
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadFromFile
</UL>

<P><STRONG><a name="[20f]"></a>tmResetTaskData</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, task.o(i.tmResetTaskData))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tmResetTaskData &rArr; tjglInit &rArr; tjgInit
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttClear
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglInit
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglClear
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglClear
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtgClear
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgClear
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDChangeDo
</UL>

<P><STRONG><a name="[35c]"></a>tmSaveHeaderToFile</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, task.o(i.tmSaveHeaderToFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = tmSaveHeaderToFile &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveToFile
</UL>

<P><STRONG><a name="[35d]"></a>tmSaveIntercutTaskFromFile</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, task.o(i.tmSaveIntercutTaskFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = tmSaveIntercutTaskFromFile &rArr; tmSaveJobToFile &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobToFile
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetCount
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itgGetAt
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetTaskJob
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetDateBufferSize
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itGetDateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveToFile
</UL>

<P><STRONG><a name="[35e]"></a>tmSaveJobTaskToFile</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, task.o(i.tmSaveJobTaskToFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = tmSaveJobTaskToFile &rArr; tmSaveJobToFile &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobToFile
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetCount
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetAt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgSort
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetIndex
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetCount
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveToFile
</UL>

<P><STRONG><a name="[2ff]"></a>tmSaveJobToFile</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, task.o(i.tmSaveJobToFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = tmSaveJobToFile &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBufferSize
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetHeadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobTaskToFile
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveIntercutTaskFromFile
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSaveYkTaskFromFile
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSavePhoneTaskFromFile
</UL>

<P><STRONG><a name="[35f]"></a>tmSaveSpecModeFromFile</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, task.o(i.tmSaveSpecModeFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = tmSaveSpecModeFromFile &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveToFile
</UL>

<P><STRONG><a name="[360]"></a>tmSaveTaskGroupToFile</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, task.o(i.tmSaveTaskGroupToFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = tmSaveTaskGroupToFile &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetHeadBufferSize
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tgGetHeadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveTaskGroupsToFile
</UL>

<P><STRONG><a name="[361]"></a>tmSaveTaskGroupsToFile</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, task.o(i.tmSaveTaskGroupsToFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = tmSaveTaskGroupsToFile &rArr; tmSaveTaskGroupToFile &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveTaskGroupToFile
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetCount
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tglGetAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveToFile
</UL>

<P><STRONG><a name="[2e3]"></a>tmSaveToFile</STRONG> (Thumb, 120 bytes, Stack size 560 bytes, task.o(i.tmSaveToFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448<LI>Call Chain = tmSaveToFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveTaskGroupsToFile
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveSpecModeFromFile
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveJobTaskToFile
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveIntercutTaskFromFile
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmSaveHeaderToFile
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSaveYkTaskFromFile
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSavePhoneTaskFromFile
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_MainMenu
</UL>

<P><STRONG><a name="[31b]"></a>tmUpdateTodayTask</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, task.o(i.tmUpdateTodayTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = tmUpdateTodayTask &rArr; tmGetTodayTaskGroup &rArr; tmIsSpecialDate &rArr; smValidDate &rArr; MyDateOfDays &rArr; DateOfDays
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmGetTodayTaskGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_UpdateTodayTask
</UL>

<P><STRONG><a name="[35b]"></a>ttClear</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, task.o(i.ttClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ttClear &rArr; tjgClear
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgClear
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmResetTaskData
</UL>

<P><STRONG><a name="[158]"></a>ttGetCount</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, task.o(i.ttGetCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ttGetCount
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttUpdateTaskState
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetNextTaskID
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetNextTask
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[14a]"></a>ttGetNextTask</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, task.o(i.ttGetNextTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ttGetNextTask &rArr; tjgGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetCount
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetAt
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAmpPower
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[147]"></a>ttGetNextTaskID</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, task.o(i.ttGetNextTaskID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ttGetNextTaskID &rArr; ttGetCount
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[34e]"></a>ttInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, task.o(i.ttInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ttInit &rArr; tjgInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgInit
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmInit
</UL>

<P><STRONG><a name="[149]"></a>ttTaskState</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, task.o(i.ttTaskState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ttTaskState &rArr; tjgGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetAt
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetPlayLength
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeToSecond
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[31c]"></a>ttUpdateTaskState</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, task.o(i.ttUpdateTaskState))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ttUpdateTaskState &rArr; tjgGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetCount
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetAt
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeToSecond
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_UpdateTodayTask
</UL>

<P><STRONG><a name="[2ed]"></a>tuner_FreqDec</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, tuner.o(i.tuner_FreqDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = tuner_FreqDec &rArr; Si47XX_Tune &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Tune
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
</UL>

<P><STRONG><a name="[2ec]"></a>tuner_FreqInc</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, tuner.o(i.tuner_FreqInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = tuner_FreqInc &rArr; Si47XX_Tune &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Tune
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
</UL>

<P><STRONG><a name="[30e]"></a>tuner_Init</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, tuner.o(i.tuner_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = tuner_Init &rArr; Si47XX_Set_Property &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Tune
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Set_Property
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Power_Up
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Get_Rev
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setBand
</UL>

<P><STRONG><a name="[315]"></a>tuner_IsSearching</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tuner.o(i.tuner_IsSearching))
<BR><BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
</UL>

<P><STRONG><a name="[30d]"></a>tuner_LoadParam</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, tuner.o(i.tuner_LoadParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tuner_LoadParam &rArr; STMFLASH_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[2f0]"></a>tuner_SaveAll</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tuner.o(i.tuner_SaveAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 2168<LI>Call Chain = tuner_SaveAll &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SaveParam
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
</UL>

<P><STRONG><a name="[362]"></a>tuner_SaveParam</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tuner.o(i.tuner_SaveParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 2160<LI>Call Chain = tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setStationFreq
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setCurrentFreq
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setBand
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SaveAll
</UL>

<P><STRONG><a name="[319]"></a>tuner_SearchDo</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, tuner.o(i.tuner_SearchDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 2200<LI>Call Chain = tuner_SearchDo &rArr; tuner_setStationFreq &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Set_Property
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setStationFreq
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setFreq
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setCurrentFreq
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getStationFreq
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getStationCount
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[2ee]"></a>tuner_SearchStart</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, tuner.o(i.tuner_SearchStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = tuner_SearchStart &rArr; Si47XX_Set_Property &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Set_Property
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
</UL>

<P><STRONG><a name="[316]"></a>tuner_SearchStop</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, tuner.o(i.tuner_SearchStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 2184<LI>Call Chain = tuner_SearchStop &rArr; tuner_setCurrentFreq &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Set_Property
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setCurrentFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_KeyPress
</UL>

<P><STRONG><a name="[2a1]"></a>tuner_getBand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tuner.o(i.tuner_getBand))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
</UL>

<P><STRONG><a name="[199]"></a>tuner_getBandName</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tuner.o(i.tuner_getBandName))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTuner
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobTunerSet
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
</UL>

<P><STRONG><a name="[2a3]"></a>tuner_getCurrentFreq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tuner.o(i.tuner_getCurrentFreq))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialJobEdit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
</UL>

<P><STRONG><a name="[19b]"></a>tuner_getFreqString</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, tuner.o(i.tuner_getFreqString))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = tuner_getFreqString &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strfmt
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTunerFreq
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobTunerSet
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetJobSourceString
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDesktopSourceString
</UL>

<P><STRONG><a name="[2df]"></a>tuner_getMaxFreq</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tuner.o(i.tuner_getMaxFreq))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
</UL>

<P><STRONG><a name="[2de]"></a>tuner_getMinFreq</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tuner.o(i.tuner_getMinFreq))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
</UL>

<P><STRONG><a name="[2e1]"></a>tuner_getStationCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tuner.o(i.tuner_getStationCount))
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchDo
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
</UL>

<P><STRONG><a name="[2e2]"></a>tuner_getStationFreq</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, tuner.o(i.tuner_getStationFreq))
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchDo
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
</UL>

<P><STRONG><a name="[2b2]"></a>tuner_getStatus</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, tuner.o(i.tuner_getStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = tuner_getStatus &rArr; Si47XX_Tune_Status &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Tune_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setFreq
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTunerSingle
</UL>

<P><STRONG><a name="[2e0]"></a>tuner_getStepFreq</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tuner.o(i.tuner_getStepFreq))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobTunerSet
</UL>

<P><STRONG><a name="[2b3]"></a>tuner_getValidSingle</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tuner.o(i.tuner_getValidSingle))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTunerSingle
</UL>

<P><STRONG><a name="[2ef]"></a>tuner_saveFreq</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tuner.o(i.tuner_saveFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuner_saveFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
</UL>

<P><STRONG><a name="[14e]"></a>tuner_setBand</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tuner.o(i.tuner_setBand))
<BR><BR>[Stack]<UL><LI>Max Depth = 2168<LI>Call Chain = tuner_setBand &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SaveParam
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[2eb]"></a>tuner_setCurrentFreq</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, tuner.o(i.tuner_setCurrentFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 2176<LI>Call Chain = tuner_setCurrentFreq &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setFreq
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SaveParam
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchStop
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchDo
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_PlayTuner
</UL>

<P><STRONG><a name="[150]"></a>tuner_setFreq</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, tuner.o(i.tuner_setFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = tuner_setFreq &rArr; tuner_getStatus &rArr; Si47XX_Tune_Status &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Tune
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_getStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setCurrentFreq
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchDo
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openRemoteTask
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTaskDo
</UL>

<P><STRONG><a name="[25f]"></a>tuner_setMute</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tuner.o(i.tuner_setMute))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = tuner_setMute &rArr; Si47XX_Set_Property &rArr; Si47XX_Wait &rArr; OperationSi47XX_2w &rArr; I2CWriteNBytes &rArr; Send_Byte &rArr; SDA_set_out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si47XX_Set_Property
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
</UL>

<P><STRONG><a name="[363]"></a>tuner_setStationFreq</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, tuner.o(i.tuner_setStationFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 2184<LI>Call Chain = tuner_setStationFreq &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SaveParam
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_SearchDo
</UL>

<P><STRONG><a name="[286]"></a>usb_disk_initialize</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ch375.o(i.usb_disk_initialize))
<BR><BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[289]"></a>usb_disk_ioctl</STRONG> (Thumb, 160 bytes, Stack size 28 bytes, ch375.o(i.usb_disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetDiskSize
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[28b]"></a>usb_disk_read</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ch375.o(i.usb_disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = usb_disk_read &rArr; ch375_ReadSec &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_ReadSec
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[28d]"></a>usb_disk_status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ch375.o(i.usb_disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>

<P><STRONG><a name="[290]"></a>usb_disk_write</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ch375.o(i.usb_disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_WriteSec
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[364]"></a>vs1003_CMDWrite</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, vs1003x.o(i.vs1003_CMDWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vs1003_CMDWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_SetSpeed
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SoftReset
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SetVolume
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_ResetDecodeTime
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SineTest
</UL>

<P><STRONG><a name="[258]"></a>vs1003_ClearDataBuf</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, vs1003x.o(i.vs1003_ClearDataBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vs1003_ClearDataBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stopPlay
</UL>

<P><STRONG><a name="[2ab]"></a>vs1003_GetDecodeTime</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, vs1003x.o(i.vs1003_GetDecodeTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vs1003_GetDecodeTime &rArr; vs1003_REGRead
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_REGRead
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTime
</UL>

<P><STRONG><a name="[30a]"></a>vs1003_Init</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, vs1003x.o(i.vs1003_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vs1003_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[367]"></a>vs1003_REGRead</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, vs1003x.o(i.vs1003_REGRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vs1003_REGRead
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_SetSpeed
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_GetDecodeTime
</UL>

<P><STRONG><a name="[368]"></a>vs1003_Reset</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, vs1003x.o(i.vs1003_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vs1003_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SineTest
</UL>

<P><STRONG><a name="[259]"></a>vs1003_ResetDecodeTime</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, vs1003x.o(i.vs1003_ResetDecodeTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vs1003_ResetDecodeTime &rArr; vs1003_CMDWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_CMDWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_SoftReset
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stopPlay
</UL>

<P><STRONG><a name="[325]"></a>vs1003_SetVolume</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, vs1003x.o(i.vs1003_SetVolume))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vs1003_SetVolume &rArr; vs1003_CMDWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_CMDWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
</UL>

<P><STRONG><a name="[30b]"></a>vs1003_SineTest</STRONG> (Thumb, 320 bytes, Stack size 8 bytes, vs1003x.o(i.vs1003_SineTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vs1003_SineTest &rArr; vs1003_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_Reset
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_CMDWrite
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[323]"></a>vs1003_SoftReset</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, vs1003x.o(i.vs1003_SoftReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = vs1003_SoftReset &rArr; vs1003_ResetDecodeTime &rArr; vs1003_CMDWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_ResetDecodeTime
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vs1003_CMDWrite
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
</UL>

<P><STRONG><a name="[326]"></a>vs1003_WriteData</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, vs1003x.o(i.vs1003_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vs1003_WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayDo
</UL>

<P><STRONG><a name="[36b]"></a>wav_GetDuration</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, wavfile.o(i.wav_GetDuration))
<BR><BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_ReadFromFSFile
</UL>

<P><STRONG><a name="[369]"></a>wav_ReadFromFSFile</STRONG> (Thumb, 78 bytes, Stack size 64 bytes, wavfile.o(i.wav_ReadFromFSFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = wav_ReadFromFSFile &rArr; ReadWAV &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_ResetData
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_GetDuration
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWAV
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeaderIsValid
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_ReadFromFile
</UL>

<P><STRONG><a name="[194]"></a>wav_ReadFromFile</STRONG> (Thumb, 50 bytes, Stack size 568 bytes, wavfile.o(i.wav_ReadFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456<LI>Call Chain = wav_ReadFromFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_ReadFromFSFile
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAudioLength
</UL>

<P><STRONG><a name="[36a]"></a>wav_ResetData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wavfile.o(i.wav_ResetData))
<BR><BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wav_ReadFromFSFile
</UL>

<P><STRONG><a name="[36c]"></a>wma_ReadFromFSFile</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, wmafile.o(i.wma_ReadFromFSFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = wma_ReadFromFSFile &rArr; ReadData &rArr; ReadObject &rArr; ReadTagStandard &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ResetData
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsValid
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ReadFromFile
</UL>

<P><STRONG><a name="[195]"></a>wma_ReadFromFile</STRONG> (Thumb, 50 bytes, Stack size 568 bytes, wmafile.o(i.wma_ReadFromFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456<LI>Call Chain = wma_ReadFromFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ReadFromFSFile
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAudioLength
</UL>

<P><STRONG><a name="[36d]"></a>wma_ResetData</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wmafile.o(i.wma_ResetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = wma_ResetData &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wma_ReadFromFSFile
</UL>

<P><STRONG><a name="[268]"></a>wr_usb_data</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, ch375.o(i.wr_usb_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_WriteSec
</UL>

<P><STRONG><a name="[1d7]"></a>wtcom</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, lcm19264.o(i.wtcom))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wtcom &rArr; LCM_GET_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_dat_out
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_dat_in
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcmDelay
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCM_GET_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcmWriteData
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Locatexy
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBusyR
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBusyM
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBusyL
</UL>

<P><STRONG><a name="[e6]"></a>xDelay100uS</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ch375.o(i.xDelay100uS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xDelay100uS
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s13
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s49
</UL>

<P><STRONG><a name="[f7]"></a>xDelayAfterWrite</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ch375.o(i.xDelayAfterWrite), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
</UL>

<P><STRONG><a name="[102]"></a>xFileNameEnumer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ch375.o(i.xFileNameEnumer), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileOpen
</UL>

<P><STRONG><a name="[ee]"></a>xQueryInterrupt</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, ch375.o(i.xQueryInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = xQueryInterrupt &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH375Data
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s44
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s13
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s45
</UL>

<P><STRONG><a name="[e0]"></a>xReadCH375Data</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ch375.o(i.xReadCH375Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xReadCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Init
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetUSBStatus
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskConnect
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueryInterrupt
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_usb_data
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetIntStatus
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileOpen
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s13
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375Reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s40
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s17
</UL>

<P><STRONG><a name="[df]"></a>xWriteCH375Cmd</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, ch375.o(i.xWriteCH375Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Reset
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Init
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetUSBStatus
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375DiskConnect
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueryInterrupt
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_usb_data
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_usb_data
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_WriteSec
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_SetDiskLun
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_ReadSec
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetIntStatus
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetDiskSize
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375FileOpen
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s47
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s41
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s44
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s13
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s43
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375Reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s40
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s18
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s17
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s45
</UL>

<P><STRONG><a name="[e2]"></a>xWriteCH375Data</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, ch375.o(i.xWriteCH375Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_usb_data
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_WriteSec
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_SetDiskLun
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_ReadSec
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s07
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s06
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s47
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s41
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s43
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s40
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s18
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s45
</UL>

<P><STRONG><a name="[4e]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[d2]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[b1]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[187]"></a>FindSongIndex</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, player.o(i.FindSongIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096<LI>Call Chain = FindSongIndex &rArr; sd_FindSongIndex &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_FindSongIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_OpenFile
</UL>

<P><STRONG><a name="[146]"></a>AutoTaskDo</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, menu.o(i.AutoTaskDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 2192 + Unknown Stack Size
<LI>Call Chain = AutoTaskDo &rArr; tuner_setBand &rArr; tuner_SaveParam &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_AutoPlayUSB
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_AutoPlayMem
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setFreq
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuner_setBand
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttTaskState
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetNextTaskID
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetNextTask
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ttGetCount
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTunerFreq
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetTunerBand
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetSourceType
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetSongID
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetPlayLength
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeToSecond
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_getSource
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_SetAllPortState
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_AmpPowerOpen
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAmpPower
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[159]"></a>BackLightDo</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, menu.o(i.BackLightDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BackLightDo
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcm_BackLightCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[1a4]"></a>GetSpecialMode</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, menu.o(i.GetSpecialMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GetSpecialMode &rArr; MyDateOfDays &rArr; DateOfDays
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyDateOfDays
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspSpecialMode
</UL>

<P><STRONG><a name="[1c9]"></a>JobRunCounterDo</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, menu.o(i.JobRunCounterDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = JobRunCounterDo &rArr; dspDesktopTask &rArr; GetDesktopSourceString &rArr; FindSongno &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSource
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_getSource
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobRuntime
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseAmpPower
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[1e9]"></a>MicphonePrioriDo</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, menu.o(i.MicphonePrioriDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MicphonePrioriDo &rArr; audio_setSourceMute &rArr; _setSource
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_setSourceMute
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[1f0]"></a>PlayerDO</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, menu.o(i.PlayerDO))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480<LI>Call Chain = PlayerDO &rArr; player_Next &rArr; next_song &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_getState
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayDo
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Next
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[206]"></a>SDChangeDo</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, menu.o(i.SDChangeDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464 + Unknown Stack Size
<LI>Call Chain = SDChangeDo &rArr; tmLoadFromFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_RemoveSongDir
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_PlayMem
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_GetCurDevice
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmResetTaskData
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmLoadFromFile
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_IsInserted
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_IsValid
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_UpdateTodayTask
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspMemoryStatus
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspDesktopTask
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DspSongName
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Init
</UL>

<P><STRONG><a name="[2f1]"></a>SetSpecialMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, menu.o(i.SetSpecialMode))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_SpecialMode
</UL>

<P><STRONG><a name="[227]"></a>ShowStatus</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, menu.o(i.ShowStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = ShowStatus &rArr; dspPlayTime &rArr; strfmt &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspTunerSingle
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayerState
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspPlayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[23c]"></a>USBChangeDo</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, menu.o(i.USBChangeDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496<LI>Call Chain = USBChangeDo &rArr; menu_UDiskInsert &rArr; player_PlayUSB &rArr; _playusbsong &rArr; SaveUSBPlayPosition &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Stop
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_RemoveSongDir
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_GetCurDevice
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_Reset
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_GetUSBStatus
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ch375_DiskIsReady
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_UDiskInsert
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspUSBDiskStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_OnTimer
</UL>

<P><STRONG><a name="[245]"></a>_DateIsValid</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, menu.o(i._DateIsValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _DateIsValid &rArr; GetDayCount
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayCount
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TimeSet
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_IntercutTask
</UL>

<P><STRONG><a name="[247]"></a>_InitJobParam</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, menu.o(i._InitJobParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _InitJobParam &rArr; tjInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
</UL>

<P><STRONG><a name="[248]"></a>_NewJobParam</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, menu.o(i._NewJobParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _NewJobParam &rArr; tjgGetNewTaskStartTime &rArr; tjgGetAt
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjglGetAt
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjgGetNewTaskStartTime
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjSetStartMyTime
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetEndTime
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
</UL>

<P><STRONG><a name="[2d8]"></a>_TimeIsValid</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, menu.o(i._TimeIsValid))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_TimeSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
</UL>

<P><STRONG><a name="[24f]"></a>_loadJobParam</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, menu.o(i._loadJobParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _loadJobParam &rArr; tjAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetStartTime
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjGetPlayLength
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tjAssign
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyTimeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keydo_JobEdit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dspJobEdit
</UL>

<P><STRONG><a name="[225]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[226]"></a>SetSysClockTo72</STRONG> (Thumb, 220 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[17b]"></a>delay</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f10x_flash.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[1f6]"></a>keyscan_delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, key.o(i.keyscan_delay))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollingKey
</UL>

<P><STRONG><a name="[269]"></a>check_fs</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = check_fs &rArr; disk_read &rArr; usb_disk_read &rArr; ch375_ReadSec &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[275]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(i.chk_chr))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[26b]"></a>chk_mounted</STRONG> (Thumb, 910 bytes, Stack size 80 bytes, ff.o(i.chk_mounted))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = chk_mounted &rArr; check_fs &rArr; disk_read &rArr; usb_disk_read &rArr; ch375_ReadSec &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[26e]"></a>cmp_lfn</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, ff.o(i.cmp_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cmp_lfn
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[270]"></a>create_chain</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[273]"></a>create_name</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = create_name &rArr; mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[276]"></a>dir_alloc</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ff.o(i.dir_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = dir_alloc &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[27a]"></a>dir_find</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ff.o(i.dir_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[279]"></a>dir_next</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[27f]"></a>dir_read</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, ff.o(i.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[281]"></a>dir_register</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_lfn
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[277]"></a>dir_sdi</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[284]"></a>fit_lfn</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, ff.o(i.fit_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fit_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[2b7]"></a>follow_path</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[2bc]"></a>get_fileinfo</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, ff.o(i.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_fileinfo &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[2b9]"></a>ld_clust</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ff.o(i.ld_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[27c]"></a>mem_cmp</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, ff.o(i.mem_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[282]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(i.mem_cpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[274]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, ff.o(i.mem_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[278]"></a>move_window</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[280]"></a>pick_lfn</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, ff.o(i.pick_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pick_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[2bb]"></a>remove_chain</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[2ba]"></a>st_clust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_clust))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[27b]"></a>sum_sfn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, ff.o(i.sum_sfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sum_sfn
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[2bd]"></a>sync_fs</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, ff.o(i.sync_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = sync_fs &rArr; disk_ioctl &rArr; usb_disk_ioctl &rArr; ch375_GetDiskSize &rArr; rd_usb_data &rArr; xWriteCH375Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[27d]"></a>sync_window</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = sync_window &rArr; disk_write &rArr; usb_disk_write &rArr; ch375_WriteSec &rArr; wr_usb_data &rArr; xWriteCH375Data
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[2b6]"></a>validate</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = validate &rArr; disk_status
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[21b]"></a>SD_SPI_Release</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, msd.o(i.SD_SPI_Release))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SD_SPI_Release
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ReadWriteByte
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msd_disk_ioctl
</UL>

<P><STRONG><a name="[181]"></a>DecodeHeader</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, mpegaudio.o(i.DecodeHeader))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindFrame
</UL>

<P><STRONG><a name="[180]"></a>IsFrameHeader</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, mpegaudio.o(i.IsFrameHeader))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindFrame
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidFrameAt
</UL>

<P><STRONG><a name="[183]"></a>ValidFrameAt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, mpegaudio.o(i.ValidFrameAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ValidFrameAt
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsFrameHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindFrame
</UL>

<P><STRONG><a name="[fb]"></a>CH375s02</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s08
</UL>

<P><STRONG><a name="[f2]"></a>CH375s45</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, CH375MAI.O(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH375Cmd
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueryInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH375s47
</UL>

<P><STRONG><a name="[4d]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[128]"></a>_fp_digits</STRONG> (Thumb, 428 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
